/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!************************!*\
  !*** ./src/app_ddi.js ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n//////////\n// Globals\n\n// hostname default - the app will use it to obtain the variable metadata\n// (ddi) and pre-processed data info if the file id is supplied as an \n// argument (for ex., gui.html?dfId=17), but hostname isn't. \n// Edit it to suit your installation. \n// (NOTE that if the file id isn't supplied, the app will default to the \n// local files specified below!)\n// NEW: it is also possible now to supply complete urls for the ddi and \n// the tab-delimited data file; the parameters are ddiurl and dataurl. \n// These new parameters are optional. If they are not supplied, the app\n// will go the old route - will try to cook standard dataverse urls \n// for both the data and metadata, if the file id is supplied; or the \n// local files if nothing is supplied. \n// -- L.A.\n\nvar production = false;\n\nvar varColor = '#f0f8ff'; //d3.rgb(\"aliceblue\");\nvar selVarColor = '#fa8072'; //d3.rgb(\"salmon\");\nvar dvColor = '#28a4c9';\nvar nomColor = '#ff6600';\n\nvar lefttab = \"tab1\"; // current tab in left panel\nvar righttab = \"btnModels\"; // current tab in right panel\n\n// transformation toolbar options\nvar transformList = [\"log(d)\", \"exp(d)\", \"d^2\", \"sqrt(d)\", \"interact(d,e)\"];\nvar transformVar = '';\n\n// Radius of circle\nvar allR = 40;\n\n// space index\nvar myspace = 0;\n\nvar forcetoggle = [\"true\"];\nvar priv = false;\n\nvar zparams = {\n    zdata: [],\n    zedges: [],\n    ztime: [],\n    znom: [],\n    zcross: [],\n    zmodel: \"\",\n    zvars: [],\n    zdv: [],\n    zdataurl: \"\",\n    zsubset: [],\n    zsetx: [],\n    zmodelcount: 0,\n    zplot: [],\n    zsessionid: \"\",\n    zdatacite: \"\"\n};\n\nvar modelCount = 0;\nvar summaryHold = false;\n\nvar valueKey = [];\nvar allNodes = [];\nvar nodes = [];\nvar links = [];\nvar mods = {};\nvar selInteract = false;\nvar callHistory = []; // unique to the space. saves transform and subset calls.\n\nvar svg, width, height, div, obj, rappURL, estimateLadda, selectLadda;\nvar arc3, arc4;\n\nvar dataurl;\nmodule.exports = function main(fileid, hostname, ddiurl, dataurl) {\n    dataurl = dataurl;\n\n    if (production && fileid == \"\") {\n        alert(\"Error: No fileid has been provided.\");\n        throw new Error(\"Error: No fileid has been provided.\");\n    }\n\n    var dataverseurl = \"\";\n    if (hostname) {\n        dataverseurl = \"https://\" + hostname;\n    } else if (production) {\n        dataverseurl = \"%PRODUCTION_DATAVERSE_URL%\";\n    } else {\n        dataverseurl = \"http://localhost:8080\";\n    }\n\n    if (fileid && !dataurl) {\n        // file id supplied; we are going to assume that we are dealing with\n        // a dataverse and cook a standard dataverse data access url,\n        // with the fileid supplied and the hostname we have\n        // either supplied or configured:\n        dataurl = dataverseurl + \"/api/access/datafile/\" + fileid;\n        dataurl = dataurl + \"?key=\" + apikey;\n        // (it is also possible to supply dataurl to the script directly, \n        // as an argument -- L.A.)\n    }\n\n    // base URL for the R apps:\n    if (!production) {\n        rappURL = \"http://0.0.0.0:8000/custom/\";\n    } else {\n        rappURL = \"https://beta.dataverse.org/custom/\";\n    }\n\n    svg = d3.select(\"#main.left div.carousel-inner\").attr('id', 'innercarousel').append('div').attr('class', 'item active').attr('id', 'm0').append('svg').attr('id', 'whitespace');\n\n    var logArray = [];\n\n    var tempWidth = d3.select(\"#main.left\").style(\"width\");\n    width = tempWidth.substring(0, tempWidth.length - 2);\n    height = $(window).height() - 120; // Hard coding for header and footer and bottom margin.\n\n    var estimated = false;\n    estimateLadda = Ladda.create(document.getElementById(\"btnEstimate\"));\n    selectLadda = Ladda.create(document.getElementById(\"btnSelect\"));\n    var rightClickLast = false;\n\n    // this is the initial color scale that is used to establish the initial colors of the nodes.  allNodes.push() below establishes a field for the master node array allNodes called \"nodeCol\" and assigns a color from this scale to that field.  everything there after should refer to the nodeCol and not the color scale, this enables us to update colors and pass the variable type to R based on its coloring\n    var colors = d3.scale.category20();\n\n    var colorTime = false;\n    var timeColor = '#2d6ca2';\n\n    var colorCS = false;\n    var csColor = '#419641';\n\n    var depVar = false;\n\n    var subsetdiv = false;\n    var setxdiv = false;\n\n    var taggedColor = '#f5f5f5'; //d3.rgb(\"whitesmoke\");\n    var grayColor = '#c0c0c0';\n\n    //Width and height for histgrams\n    var barwidth = 1.3 * allR;\n    var barheight = 0.5 * allR;\n    var barPadding = 0.35;\n    var barnumber = 7;\n\n    var arc0 = d3.svg.arc().innerRadius(allR + 5).outerRadius(allR + 20).startAngle(0).endAngle(3.2);\n\n    var arc1 = d3.svg.arc().innerRadius(allR + 5).outerRadius(allR + 20).startAngle(0).endAngle(1);\n\n    var arc2 = d3.svg.arc().innerRadius(allR + 5).outerRadius(allR + 20).startAngle(1.1).endAngle(2.2);\n\n    arc3 = d3.svg.arc().innerRadius(allR + 5).outerRadius(allR + 20).startAngle(2.3).endAngle(3.3);\n\n    arc4 = d3.svg.arc().innerRadius(allR + 5).outerRadius(allR + 20).startAngle(4.3).endAngle(5.3);\n\n    // From .csv\n    var dataset2 = [];\n    var lablArray = [];\n    var hold = [];\n    var allResults = [];\n    var subsetNodes = [];\n    var citetoggle = false;\n\n    var spaces = [];\n    var trans = []; //var list for each space contain variables in original data plus trans in that space\n\n    // collapsable user log\n    $('#collapseLog').on('shown.bs.collapse', function () {\n        d3.select(\"#collapseLog div.panel-body\").selectAll(\"p\").data(logArray).enter().append(\"p\").text(function (d) {\n            return d;\n        });\n    });\n\n    $('#collapseLog').on('hidden.bs.collapse', function () {\n        d3.select(\"#collapseLog div.panel-body\").selectAll(\"p\").remove();\n    });\n\n    // text for the about box\n    // note that .textContent is the new way to write text to a div\n    $('#about div.panel-body').text('TwoRavens v0.1 \"Dallas\" -- The Norse god Odin had two talking ravens as advisors, who would fly out into the world and report back all they observed.  In the Norse, their names were \"Thought\" and \"Memory\".  In our coming release, our thought-raven automatically advises on statistical model selection, while our memory-raven accumulates previous statistical models from Dataverse, to provide cummulative guidance and meta-analysis.'); //This is the first public release of a new, interactive Web application to explore data, view descriptive statistics, and estimate statistical models.\";\n\n    // read DDI metadata with d3:\n    var metadataurl = \"\";\n    if (ddiurl) {\n        metadataurl = ddiurl;\n    } else if (fileid) {\n        // file id supplied; we're going to cook a standard dataverse\n        // metadata url, with the file id provided and the hostname\n        // supplied or configured:\n        metadataurl = dataverseurl + \"/api/meta/datafile/\" + fileid;\n    } else {\n        // neither a full ddi url, nor file id supplied\n        // use one of the sample data files distributed with the app in the 'data' directory\n        metadataurl = \"data/PUMS5small-ddi.xml\"; // This is California PUMS subset\n    }\n\n    // Reading pre-processed metadata:\n    // Pre-processed data:\n    var pURL = \"\";\n    if (dataurl) {\n        pURL = dataurl + \"&format=prep\";\n    } else {\n        // use one of the sample data files distributed with the app in the 'data' directory\n        pURL = \"data/preprocessPUMS5small.json\"; // California PUMS subset\n    }\n\n    var preprocess = {};\n\n    // this is the function and callback routine that loads all external data: metadata (DVN's ddi), preprocessed (for plotting distributions), and zeligmodels (produced by Zelig) and initiates the data download to the server\n    var url, p, v, _callback;\n    readPreprocess(url = pURL, p = preprocess, v = null, _callback = function callback() {\n        d3.xml(metadataurl, \"application/xml\", function (xml) {\n            var vars = xml.documentElement.getElementsByTagName(\"var\");\n            var temp = xml.documentElement.getElementsByTagName(\"fileName\");\n            zparams.zdata = temp[0].childNodes[0].nodeValue;\n\n            // clean the citation so that the POST is valid json\n            function cleanstring(s) {\n                s = s.replace(/\\&/g, \"and\");\n                s = s.replace(/\\;/g, \",\");\n                s = s.replace(/\\%/g, \"-\");\n                return s;\n            }\n\n            var cite = xml.documentElement.getElementsByTagName(\"biblCit\");\n            zparams.zdatacite = cite[0].childNodes[0].nodeValue;\n            zparams.zdatacite = cleanstring(zparams.zdatacite);\n\n            // dataset name trimmed to 12 chars\n            var dataname = zparams.zdata.replace(/\\.(.*)/, \"\"); // regular expression to drop any file extension\n            // Put dataset name, from meta-data, into top panel\n            d3.select(\"#dataName\").html(dataname);\n\n            $('#cite div.panel-body').text(zparams.zdatacite);\n\n            // Put dataset name, from meta-data, into page title\n            d3.select(\"title\").html(\"TwoRavens \" + dataname);\n\n            // temporary values for hold that correspond to histogram bins\n            hold = [.6, .2, .9, .8, .1, .3, .4];\n            var myvalues = [0, 0, 0, 0, 0];\n            for (var i = 0; i < vars.length; i++) {\n                valueKey[i] = vars[i].attributes.name.nodeValue;\n\n                if (vars[i].getElementsByTagName(\"labl\").length === 0) {\n                    lablArray[i] = \"no label\";\n                } else {\n                    lablArray[i] = vars[i].getElementsByTagName(\"labl\")[0].childNodes[0].nodeValue;\n                }\n\n                var datasetcount = d3.layout.histogram().bins(barnumber).frequency(false)(myvalues);\n\n                // this creates an object to be pushed to allNodes. this contains all the preprocessed data we have for the variable, as well as UI data pertinent to that variable, such as setx values (if the user has selected them) and pebble coordinates\n                var obj1 = {\n                    id: i,\n                    reflexive: false,\n                    \"name\": valueKey[i],\n                    \"labl\": lablArray[i],\n                    data: [5, 15, 20, 0, 5, 15, 20],\n                    count: hold,\n                    \"nodeCol\": colors(i),\n                    \"baseCol\": colors(i),\n                    \"strokeColor\": selVarColor,\n                    \"strokeWidth\": \"1\",\n                    \"subsetplot\": false,\n                    \"subsetrange\": [\"\", \"\"],\n                    \"setxplot\": false,\n                    \"setxvals\": [\"\", \"\"],\n                    \"grayout\": false\n                };\n                jQuery.extend(true, obj1, preprocess[valueKey[i]]);\n                allNodes.push(obj1);\n            };\n\n            // Reading the zelig models and populating the model list in the right panel.\n            d3.json(\"data/zelig5models.json\", function (error, json) {\n                if (error) return console.warn(error);\n                var jsondata = json;\n\n                console.log(\"zelig models json: \", jsondata);\n                for (var key in jsondata.zelig5models) {\n                    if (jsondata.zelig5models.hasOwnProperty(key)) {\n                        mods[jsondata.zelig5models[key].name[0]] = jsondata.zelig5models[key].description[0];\n                    }\n                }\n\n                d3.json(\"data/zelig5choicemodels.json\", function (error, json) {\n                    if (error) return console.warn(error);\n                    var jsondata = json;\n                    console.log(\"zelig choice models json: \", jsondata);\n                    for (var key in jsondata.zelig5choicemodels) {\n                        if (jsondata.zelig5choicemodels.hasOwnProperty(key)) {\n                            mods[jsondata.zelig5choicemodels[key].name[0]] = jsondata.zelig5choicemodels[key].description[0];\n                        }\n                    }\n\n                    scaffolding(_callback = layout);\n                    dataDownload();\n                });\n            });\n        });\n    });\n};\n\n// scaffolding is called after all external data are guaranteed to have been read to completion. this populates the left panel with variable names, the right panel with model names, the transformation tool, an the associated mouseovers. its callback is layout(), which initializes the modeling space\nfunction scaffolding(callback) {\n    // establishing the transformation element\n    d3.select(\"#transformations\").append(\"input\").attr(\"id\", \"tInput\").attr(\"class\", \"form-control\").attr(\"type\", \"text\").attr(\"value\", \"Variable transformation\");\n\n    // variable dropdown\n    d3.select(\"#transformations\").append(\"ul\").attr(\"id\", \"transSel\").style(\"display\", \"none\").style(\"background-color\", varColor).selectAll('li').data([\"a\", \"b\"]) //set to variables in model space as they're added\n    .enter().append(\"li\").text(function (d) {\n        return d;\n    });\n\n    // function dropdown\n    d3.select(\"#transformations\").append(\"ul\").attr(\"id\", \"transList\").style(\"display\", \"none\").style(\"background-color\", varColor).selectAll('li').data(transformList).enter().append(\"li\").text(function (d) {\n        return d;\n    });\n\n    $('#tInput').click(function () {\n        var t = document.getElementById('transSel').style.display;\n        if (t !== \"none\") {\n            // if variable list is displayed when input is clicked...\n            $('#transSel').fadeOut(100);\n            return false;\n        }\n        var t1 = document.getElementById('transList').style.display;\n        if (t1 !== \"none\") {\n            // if function list is displayed when input is clicked...\n            $('#transList').fadeOut(100);\n            return false;\n        }\n\n        // highlight the text\n        $(this).select();\n\n        var pos = $('#tInput').offset();\n        pos.top += $('#tInput').width();\n        $('#transSel').fadeIn(100);\n        return false;\n    });\n\n    var n, typeTransform;\n\n    $('#tInput').keyup(function (event) {\n        var t = document.getElementById('transSel').style.display;\n        var t1 = document.getElementById('transList').style.display;\n\n        if (t !== \"none\") {\n            $('#transSel').fadeOut(100);\n        } else if (t1 !== \"none\") {\n            $('#transList').fadeOut(100);\n        }\n\n        if (event.keyCode == 13) {\n            // keyup on \"Enter\"\n            n = $('#tInput').val();\n            var t = transParse(n = n);\n            if (t === null) {\n                return;\n            }\n            transform(n = t.slice(0, t.length - 1), t = t[t.length - 1], typeTransform = false);\n        }\n    });\n\n    var t;\n    $('#transList li').click(function (event) {\n        var tvar = $('#tInput').val();\n\n        // if interact is selected, show variable list again\n        if ($(this).text() === \"interact(d,e)\") {\n            $('#tInput').val(tvar.concat('*'));\n            selInteract = true;\n            $(this).parent().fandeOut(100);\n            $('#transSel').fadeIn(100);\n            event.stopPropagation();\n            return;\n        }\n\n        var tfunc = $(this).text().replace(\"d\", \"_transvar0\");\n        var tcall = $(this).text().replace(\"d\", tvar);\n        $('#tInput').val(tcall);\n        $(this).parent().fadeOut(100);\n        event.stopPropagation();\n        transform(n = tvar, t = tfunc, typeTransform = false);\n    });\n\n    // populating the variable list in the left panel\n    d3.select(\"#tab1\").selectAll(\"p\").data(valueKey).enter().append(\"p\").attr(\"id\", function (d) {\n        return d.replace(/\\W/g, \"_\"); // replace non-alphanumerics for selection purposes\n    }) // perhapse ensure this id is unique by adding '_' to the front?\n    .text(function (d) {\n        return d;\n    }).style('background-color', function (d) {\n        if (findNodeIndex(d) > 2) {\n            return varColor;\n        }\n        return hexToRgba(selVarColor);\n    }).attr(\"data-container\", \"body\").attr(\"data-toggle\", \"popover\").attr(\"data-trigger\", \"hover\").attr(\"data-placement\", \"right\").attr(\"data-html\", \"true\").attr(\"onmouseover\", \"$(this).popover('toggle');\").attr(\"onmouseout\", \"$(this).popover('toggle');\").attr(\"data-original-title\", \"Summary Statistics\");\n\n    d3.select(\"#models\").style('height', 2000).style('overfill', 'scroll');\n\n    var modellist = Object.keys(mods);\n\n    d3.select(\"#models\").selectAll(\"p\").data(modellist).enter().append(\"p\").attr(\"id\", function (d) {\n        return \"_model_\".concat(d);\n    }).text(function (d) {\n        return d;\n    }).style('background-color', function (d) {\n        return varColor;\n    }).attr(\"data-container\", \"body\").attr(\"data-toggle\", \"popover\").attr(\"data-trigger\", \"hover\").attr(\"data-placement\", \"top\").attr(\"data-html\", \"true\").attr(\"onmouseover\", \"$(this).popover('toggle');\").attr(\"onmouseout\", \"$(this).popover('toggle');\").attr(\"data-original-title\", \"Model Description\").attr(\"data-content\", function (d) {\n        return mods[d];\n    });\n\n    if (typeof callback === \"function\") {\n        callback(); // this calls layout() because at this point all scaffolding is up and ready\n    }\n}\n\nfunction layout(v) {\n    var myValues = [];\n    nodes = [];\n    links = [];\n\n    if (v === \"add\" | v === \"move\") {\n        d3.select(\"#tab1\").selectAll(\"p\").style('background-color', varColor);\n        for (var j = 0; j < zparams.zvars.length; j++) {\n            var ii = findNodeIndex(zparams.zvars[j]);\n            if (allNodes[ii].grayout) {\n                continue;\n            }\n            nodes.push(allNodes[ii]);\n            var selectMe = zparams.zvars[j].replace(/\\W/g, \"_\");\n            selectMe = \"#\".concat(selectMe);\n            d3.select(selectMe).style('background-color', function () {\n                return hexToRgba(nodes[j].strokeColor);\n            });\n        }\n\n        for (var j = 0; j < zparams.zedges.length; j++) {\n            var mysrc = nodeIndex(zparams.zedges[j][0]);\n            var mytgt = nodeIndex(zparams.zedges[j][1]);\n            links.push({\n                source: nodes[mysrc],\n                target: nodes[mytgt],\n                left: false,\n                right: true\n            });\n        }\n    } else {\n        if (allNodes.length > 2) {\n            nodes = [allNodes[0], allNodes[1], allNodes[2]];\n            links = [{\n                source: nodes[1],\n                target: nodes[0],\n                left: false,\n                right: true\n            }, {\n                source: nodes[0],\n                target: nodes[2],\n                left: false,\n                right: true\n            }];\n        } else if (allNodes.length === 2) {\n            nodes = [allNodes[0], allNodes[1]];\n            links = [{\n                source: nodes[1],\n                target: nodes[0],\n                left: false,\n                right: true\n            }];\n        } else if (allNodes.length === 1) {\n            nodes = [allNodes[0]];\n        } else {\n            alert(\"There are zero variables in the metadata.\");\n            return;\n        }\n    }\n\n    panelPlots(); // after nodes is populated, add subset and setx panels\n    populatePopover(); // pipes in the summary stats shown on mouseovers\n\n    var force = d3.layout.force().nodes(nodes).links(links).size([width, height]).linkDistance(150).charge(-800).on('tick', tick);\n\n    // define arrow markers for graph links\n    svg.append('svg:defs').append('svg:marker').attr('id', 'end-arrow').attr('viewBox', '0 -5 10 10').attr('refX', 6).attr('markerWidth', 3).attr('markerHeight', 3).attr('orient', 'auto').append('svg:path').attr('d', 'M0,-5L10,0L0,5').style('fill', '#000');\n\n    svg.append('svg:defs').append('svg:marker').attr('id', 'start-arrow').attr('viewBox', '0 -5 10 10').attr('refX', 4).attr('markerWidth', 3).attr('markerHeight', 3).attr('orient', 'auto').append('svg:path').attr('d', 'M10,-5L0,0L10,5').style('fill', '#000');\n\n    // line displayed when dragging new nodes\n    var drag_line = svg.append('svg:path').attr('class', 'link dragline hidden').attr('d', 'M0,0L0,0');\n\n    // handles to link and node element groups\n    var path = svg.append('svg:g').selectAll('path'),\n        circle = svg.append('svg:g').selectAll('g');\n\n    // mouse event vars\n    var selected_node = null,\n        selected_link = null,\n        mousedown_link = null,\n        mousedown_node = null,\n        mouseup_node = null;\n\n    function resetMouseVars() {\n        mousedown_node = null;\n        mouseup_node = null;\n        mousedown_link = null;\n    }\n\n    // update force layout (called automatically each iteration)\n    function tick() {\n        // draw directed edges with proper padding from node centers\n        path.attr('d', function (d) {\n            var deltaX = d.target.x - d.source.x,\n                deltaY = d.target.y - d.source.y,\n                dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n                normX = deltaX / dist,\n                normY = deltaY / dist,\n                sourcePadding = d.left ? allR + 5 : allR,\n                targetPadding = d.right ? allR + 5 : allR,\n                sourceX = d.source.x + sourcePadding * normX,\n                sourceY = d.source.y + sourcePadding * normY,\n                targetX = d.target.x - targetPadding * normX,\n                targetY = d.target.y - targetPadding * normY;\n            return 'M' + sourceX + ',' + sourceY + 'L' + targetX + ',' + targetY;\n        });\n\n        circle.attr('transform', function (d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        });\n    }\n\n    //  add listeners to leftpanel.left.  every time a variable is clicked, nodes updates and background color changes.  mouseover shows summary stats or model description.\n    d3.select(\"#tab1\").selectAll(\"p\").on(\"mouseover\", function (d) {\n        // REMOVED THIS TOOLTIP CODE AND MADE A BOOTSTRAP POPOVER COMPONENT\n        $(\"body div.popover\").addClass(\"variables\");\n        $(\"body div.popover div.popover-content\").addClass(\"form-horizontal\");\n    }).on(\"click\", function varClick() {\n        if (allNodes[findNodeIndex(this.id)].grayout) {\n            return null;\n        }\n        d3.select(this).style('background-color', function (d) {\n            var myText = d3.select(this).text();\n            var myColor = d3.select(this).style('background-color');\n            var mySC = allNodes[findNodeIndex(myText)].strokeColor;\n\n            zparams.zvars = []; //empty the zvars array\n            if (d3.rgb(myColor).toString() === varColor.toString()) {\n                // we are adding a var\n                if (nodes.length == 0) {\n                    nodes.push(findNode(myText));\n                    nodes[0].reflexive = true;\n                } else {\n                    nodes.push(findNode(myText));\n                }\n                return hexToRgba(selVarColor);\n            } else {\n                // dropping a variable\n                nodes.splice(findNode(myText)[\"index\"], 1);\n                spliceLinksForNode(findNode(myText));\n\n                if (mySC == dvColor) {\n                    var dvIndex = zparams.zdv.indexOf(myText);\n                    if (dvIndex > -1) {\n                        zparams.zdv.splice(dvIndex, 1);\n                    }\n                } else if (mySC == csColor) {\n                    var csIndex = zparams.zcross.indexOf(myText);\n                    if (csIndex > -1) {\n                        zparams.zcross.splice(csIndex, 1);\n                    }\n                } else if (mySC == timeColor) {\n                    var timeIndex = zparams.ztime.indexOf(myText);\n                    if (timeIndex > -1) {\n                        zparams.ztime.splice(timeIndex, 1);\n                    }\n                } else if (mySC == nomColor) {\n                    var nomIndex = zparams.znom.indexOf(myText);\n                    if (nomIndex > -1) {\n                        zparams.znom.splice(dvIndex, 1);\n                    }\n                }\n\n                nodeReset(allNodes[findNodeIndex(myText)]);\n                borderState();\n                legend();\n                return varColor;\n            }\n        });\n        panelPlots();\n        restart();\n    });\n\n    d3.select(\"#models\").selectAll(\"p\") // models tab\n    //  d3.select(\"#Display_content\")\n    .on(\"click\", function () {\n        var myColor = d3.select(this).style('background-color');\n        d3.select(\"#models\").selectAll(\"p\").style('background-color', varColor);\n        d3.select(this).style('background-color', function (d) {\n            if (d3.rgb(myColor).toString() === varColor.toString()) {\n                zparams.zmodel = d.toString();\n                return hexToRgba(selVarColor);\n            } else {\n                zparams.zmodel = \"\";\n                return varColor;\n            }\n        });\n        restart();\n    });\n\n    // update graph (called when needed)\n    function restart() {\n        // nodes.id is pegged to allNodes, i.e. the order in which variables are read in\n        // nodes.index is floating and depends on updates to nodes.  a variables index changes when new variables are added.\n        circle.call(force.drag);\n        if (forcetoggle[0] === \"true\") {\n            force.gravity(0.1);\n            force.charge(-800);\n            force.linkStrength(1);\n        } else {\n            force.gravity(0);\n            force.charge(0);\n            force.linkStrength(0);\n        }\n        force.resume();\n\n        // path (link) group\n        path = path.data(links);\n\n        // update existing links\n        // VJD: dashed links between pebbles are \"selected\". this is disabled for now\n        path.classed('selected', function (d) {\n            return;\n        }) //return d === selected_link; })\n        .style('marker-start', function (d) {\n            return d.left ? 'url(#start-arrow)' : '';\n        }).style('marker-end', function (d) {\n            return d.right ? 'url(#end-arrow)' : '';\n        });\n\n        // add new links\n        path.enter().append('svg:path').attr('class', 'link').classed('selected', function (d) {\n            return;\n        }) //return d === selected_link; })\n        .style('marker-start', function (d) {\n            return d.left ? 'url(#start-arrow)' : '';\n        }).style('marker-end', function (d) {\n            return d.right ? 'url(#end-arrow)' : '';\n        }).on('mousedown', function (d) {\n            // do we ever need to select a link? make it delete..\n            var obj1 = JSON.stringify(d);\n            for (var j = 0; j < links.length; j++) {\n                if (obj1 === JSON.stringify(links[j])) {\n                    links.splice(j, 1);\n                }\n            }\n        });\n\n        // remove old links\n        path.exit().remove();\n\n        // circle (node) group\n        circle = circle.data(nodes, function (d) {\n            return d.id;\n        });\n\n        // update existing nodes (reflexive & selected visual states)\n        //d3.rgb is the function adjusting the color here.\n        circle.selectAll('circle').classed('reflexive', function (d) {\n            return d.reflexive;\n        }).style('fill', function (d) {\n            return d3.rgb(d.nodeCol);\n        }).style('stroke', function (d) {\n            return d3.rgb(d.strokeColor);\n        }).style('stroke-width', function (d) {\n            return d.strokeWidth;\n        });\n\n        // add new nodes\n        var g = circle.enter().append('svg:g').attr(\"id\", function (d) {\n            var myname = d.name + \"biggroup\";\n            return myname;\n        });\n\n        // add plot\n        g.each(function (d) {\n            d3.select(this);\n            if (d.plottype === \"continuous\") {\n                densityNode(d, obj = this);\n            } else if (d.plottype === \"bar\") {\n                barsNode(d, obj = this);\n            }\n        });\n\n        g.append(\"path\").attr(\"id\", function (d) {\n            return \"dvArc\".concat(d.id);\n        }).attr(\"d\", arc3).style(\"fill\", dvColor).attr(\"fill-opacity\", 0).on('mouseover', function (d) {\n            d3.select(this).transition().attr(\"fill-opacity\", .3).delay(0).duration(100);\n            d3.select(\"#dvText\".concat(d.id)).transition().attr(\"fill-opacity\", .9).delay(0).duration(100);\n        }).on('mouseout', function (d) {\n            d3.select(this).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#dvText\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n        }).on('click', function (d) {\n            setColors(d, dvColor);\n            legend(dvColor);\n            restart();\n        });\n        g.append(\"text\").attr(\"id\", function (d) {\n            return \"dvText\".concat(d.id);\n        }).attr(\"x\", 6).attr(\"dy\", 11.5).attr(\"fill-opacity\", 0).append(\"textPath\").attr(\"xlink:href\", function (d) {\n            return \"#dvArc\".concat(d.id);\n        }).text(\"Dep Var\");\n\n        g.append(\"path\").attr(\"id\", function (d) {\n            return \"nomArc\".concat(d.id);\n        }).attr(\"d\", arc4).style(\"fill\", nomColor).attr(\"fill-opacity\", 0).on('mouseover', function (d) {\n            if (d.defaultNumchar == \"character\") {\n                return;\n            }\n            d3.select(this).transition().attr(\"fill-opacity\", .3).delay(0).duration(100);\n            d3.select(\"#nomText\".concat(d.id)).transition().attr(\"fill-opacity\", .9).delay(0).duration(100);\n        }).on('mouseout', function (d) {\n            if (d.defaultNumchar == \"character\") {\n                return;\n            }\n            d3.select(this).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#nomText\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n        }).on('click', function (d) {\n            if (d.defaultNumchar == \"character\") {\n                return;\n            }\n            setColors(d, nomColor);\n            legend(nomColor);\n            restart();\n        });\n        g.append(\"text\").attr(\"id\", function (d) {\n            return \"nomText\".concat(d.id);\n        }).attr(\"x\", 6).attr(\"dy\", 11.5).attr(\"fill-opacity\", 0).append(\"textPath\").attr(\"xlink:href\", function (d) {\n            return \"#nomArc\".concat(d.id);\n        }).text(\"Nominal\");\n\n        g.append('svg:circle').attr('class', 'node').attr('r', allR).style('pointer-events', 'inherit').style('fill', function (d) {\n            return d.nodeCol;\n        }).style('opacity', \"0.5\").style('stroke', function (d) {\n            return d3.rgb(d.strokeColor).toString();\n        }).classed('reflexive', function (d) {\n            return d.reflexive;\n        }).on('dblclick', function (d) {\n            d3.event.stopPropagation(); // stop click from bubbling\n            summaryHold = true;\n        }).on('contextmenu', function (d) {\n            // right click on node\n            d3.event.preventDefault();\n            d3.event.stopPropagation(); // stop right click from bubbling\n            rightClickLast = true;\n\n            mousedown_node = d;\n            if (mousedown_node === selected_node) selected_node = null;else selected_node = mousedown_node;\n            selected_link = null;\n\n            // reposition drag line\n            drag_line.style('marker-end', 'url(#end-arrow)').classed('hidden', false).attr('d', 'M' + mousedown_node.x + ',' + mousedown_node.y + 'L' + mousedown_node.x + ',' + mousedown_node.y);\n\n            svg.on('mousemove', mousemove);\n            restart();\n        }).on('mouseup', function (d) {\n            d3.event.stopPropagation(); // stop mouseup from bubbling\n\n            if (rightClickLast) {\n                rightClickLast = false;\n                return;\n            }\n\n            if (!mousedown_node) return;\n\n            // needed by FF\n            drag_line.classed('hidden', true).style('marker-end', '');\n\n            // check for drag-to-self\n            mouseup_node = d;\n            if (mouseup_node === mousedown_node) {\n                resetMouseVars();\n                return;\n            }\n\n            // unenlarge target node\n            d3.select(this).attr('transform', '');\n\n            // add link to graph (update if exists)\n            // NB: links are strictly source < target; arrows separately specified by booleans\n            var source, target, direction;\n            if (mousedown_node.id < mouseup_node.id) {\n                source = mousedown_node;\n                target = mouseup_node;\n                direction = 'right';\n            } else {\n                source = mouseup_node;\n                target = mousedown_node;\n                direction = 'left';\n            }\n\n            var link;\n            link = links.filter(function (l) {\n                return l.source === source && l.target === target;\n            })[0];\n            if (link) {\n                link[direction] = true;\n            } else {\n                link = {\n                    source: source,\n                    target: target,\n                    left: false,\n                    right: false\n                };\n                link[direction] = true;\n                links.push(link);\n            }\n\n            // select new link\n            selected_link = link;\n            selected_node = null;\n            svg.on('mousemove', null);\n\n            resetMouseVars();\n            restart();\n        });\n\n        // show node Names\n        g.append('svg:text').attr('x', 0).attr('y', 15).attr('class', 'id').text(function (d) {\n            return d.name;\n        });\n\n        // show summary stats on mouseover\n        // SVG doesn't support text wrapping, use html instead\n        g.selectAll(\"circle.node\").on(\"mouseover\", function (d) {\n            tabLeft(\"tab3\");\n            varSummary(d);\n            document.getElementById('transformations').setAttribute(\"style\", \"display:block\");\n            var select = document.getElementById(\"transSel\");\n            select.selectedIndex = d.id;\n            transformVar = valueKey[d.id];\n\n            d3.select(\"#dvArc\".concat(d.id)).transition().attr(\"fill-opacity\", .1).delay(0).duration(100);\n            d3.select(\"#dvText\".concat(d.id)).transition().attr(\"fill-opacity\", .5).delay(0).duration(100);\n            if (d.defaultNumchar == \"numeric\") {\n                d3.select(\"#nomArc\".concat(d.id)).transition().attr(\"fill-opacity\", .1).delay(0).duration(100);\n                d3.select(\"#nomText\".concat(d.id)).transition().attr(\"fill-opacity\", .5).delay(0).duration(100);\n            }\n            d3.select(\"#csArc\".concat(d.id)).transition().attr(\"fill-opacity\", .1).delay(0).duration(100);\n            d3.select(\"#csText\".concat(d.id)).transition().attr(\"fill-opacity\", .5).delay(0).duration(100);\n            d3.select(\"#timeArc\".concat(d.id)).transition().attr(\"fill-opacity\", .1).delay(0).duration(100);\n            d3.select(\"#timeText\".concat(d.id)).transition().attr(\"fill-opacity\", .5).delay(0).duration(100);\n        }).on(\"mouseout\", function (d) {\n            if (summaryHold === false) {\n                tabLeft(lefttab);\n            }\n\n            d3.select(\"#csArc\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#csText\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#timeArc\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#timeText\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#dvArc\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#dvText\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#nomArc\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n            d3.select(\"#nomText\".concat(d.id)).transition().attr(\"fill-opacity\", 0).delay(100).duration(500);\n        });\n\n        // populating transformation dropdown\n        var t = [];\n        for (var j = 0; j < nodes.length; j++) {\n            t.push(nodes[j].name);\n        }\n\n        // the transformation variable list is silently updated as pebbles are added/removed\n        d3.select(\"#transSel\").selectAll('li').remove();\n\n        d3.select(\"#transSel\").selectAll('li').data(t) //set to variables in model space as they're added\n        .enter().append(\"li\").text(function (d) {\n            return d;\n        });\n\n        $('#transSel li').click(function (event) {\n            // if 'interaction' is the selected function, don't show the function list again\n            if (selInteract === true) {\n                var n = $('#tInput').val().concat($(this).text());\n                $('#tInput').val(n);\n                event.stopPropagation();\n                var t = transParse(n = n);\n                if (t === null) {\n                    return;\n                }\n                $(this).parent().fadeOut(100);\n                transform(n = t.slice(0, t.length - 1), t = t[t.length - 1], typeTransform = false);\n                return;\n            }\n\n            $('#tInput').val($(this).text());\n            $(this).parent().fadeOut(100);\n            $('#transList').fadeIn(100);\n            event.stopPropagation();\n        });\n\n        // remove old nodes\n        circle.exit().remove();\n        force.start();\n    }\n\n    function mousedown(d) {\n        // prevent I-bar on drag\n        d3.event.preventDefault();\n        // because :active only works in WebKit?\n        svg.classed('active', true);\n        if (d3.event.ctrlKey || mousedown_node || mousedown_link) {\n            return;\n        }\n        restart();\n    }\n\n    function mousemove(d) {\n        if (!mousedown_node) return;\n\n        // update drag line\n        drag_line.attr('d', 'M' + mousedown_node.x + ',' + mousedown_node.y + 'L' + d3.mouse(this)[0] + ',' + d3.mouse(this)[1]);\n    }\n\n    function mouseup(d) {\n        if (mousedown_node) {\n            drag_line.classed('hidden', true).style('marker-end', '');\n        }\n        // because :active only works in WebKit?\n        svg.classed('active', false);\n\n        // clear mouse event vars\n        resetMouseVars();\n    }\n\n    // app starts here\n    svg.attr('id', function () {\n        return \"whitespace\".concat(myspace);\n    }).attr('height', height).on('mousedown', function () {\n        mousedown(this);\n    }).on('mouseup', function () {\n        mouseup(this);\n    });\n\n    d3.select(window).on('click', function () {\n        //NOTE: all clicks will bubble here unless event.stopPropagation()\n        $('#transList').fadeOut(100);\n        $('#transSel').fadeOut(100);\n    });\n\n    restart(); // this is the call the restart that initializes the force.layout()\n    fakeClick();\n} // end layout\n\n// returns id\nvar findNodeIndex = function findNodeIndex(nodeName) {\n    for (var i in allNodes) {\n        if (allNodes[i][\"name\"] === nodeName) {\n            return allNodes[i][\"id\"];\n        }\n    };\n};\n\nvar nodeIndex = function nodeIndex(nodeName) {\n    for (var i in nodes) {\n        if (nodes[i][\"name\"] === nodeName) {\n            return i;\n        }\n    }\n};\n\nvar findNode = function findNode(nodeName) {\n    for (var i in allNodes) {\n        if (allNodes[i][\"name\"] === nodeName) return allNodes[i];\n    };\n};\n\n// function called by force button\nfunction forceSwitch() {\n    if (forcetoggle[0] === \"true\") {\n        forcetoggle = [\"false\"];\n    } else {\n        forcetoggle = [\"true\"];\n    }\n\n    if (forcetoggle[0] === \"false\") {\n        document.getElementById('btnForce').setAttribute(\"class\", \"btn active\");\n    } else {\n        document.getElementById('btnForce').setAttribute(\"class\", \"btn btn-default\");\n        fakeClick();\n    }\n}\n\nfunction spliceLinksForNode(node) {\n    var toSplice = links.filter(function (l) {\n        return l.source === node || l.target === node;\n    });\n    toSplice.map(function (l) {\n        links.splice(links.indexOf(l), 1);\n    });\n}\n\nfunction zPop() {\n    if (dataurl) {\n        zparams.zdataurl = dataurl;\n    }\n    zparams.zmodelcount = modelCount;\n    zparams.zedges = [];\n    zparams.zvars = [];\n\n    for (var j = 0; j < nodes.length; j++) {\n        //populate zvars array\n        zparams.zvars.push(nodes[j].name);\n        var temp = nodes[j].id;\n\n        zparams.zsetx[j] = allNodes[temp].setxvals;\n        zparams.zsubset[j] = allNodes[temp].subsetrange;\n    }\n\n    for (var j = 0; j < links.length; j++) {\n        //populate zedges array\n        var srctgt = [];\n        //correct the source target ordering for Zelig\n        if (links[j].left === false) {\n            srctgt = [links[j].source.name, links[j].target.name];\n        } else {\n            srctgt = [links[j].target.name, links[j].source.name];\n        }\n        zparams.zedges.push(srctgt);\n    }\n}\n\nfunction estimate(btn) {\n    if (production && zparams.zsessionid == \"\") {\n        alert(\"Warning: Data download is not complete. Try again soon.\");\n        return;\n    }\n\n    zPop();\n    // write links to file & run R CMD\n\n    // package the output as JSON\n    // add call history and package the zparams object as JSON\n    zparams.callHistory = callHistory;\n    var jsonout = JSON.stringify(zparams);\n\n    var urlcall = rappURL + \"zeligapp\"; //base.concat(jsonout);\n    var solajsonout = \"solaJSON=\" + jsonout;\n    console.log(\"urlcall out: \", urlcall);\n    console.log(\"POST out: \", solajsonout);\n\n    zparams.allVars = valueKey.slice(10, 25); // this is because the URL is too long...\n    var jsonout = JSON.stringify(zparams);\n    //var selectorBase = rappURL+\"selectorapp?solaJSON=\";\n    var selectorurlcall = rappURL + \"selectorapp\"; //.concat(jsonout);\n\n    function estimateSuccess(btn, json) {\n        estimateLadda.stop(); // stop spinner\n        allResults.push(json);\n        console.log(allResults);\n        console.log(\"json in: \", json);\n\n        var myparent = document.getElementById(\"results\");\n        if (estimated == false) {\n            myparent.removeChild(document.getElementById(\"resultsHolder\"));\n        }\n\n        estimated = true;\n        d3.select(\"#results\").style(\"display\", \"block\");\n\n        d3.select(\"#resultsView\").style(\"display\", \"block\");\n\n        d3.select(\"#modelView\").style(\"display\", \"block\");\n\n        // programmatic click on Results button\n        $(\"#btnResults\").trigger(\"click\");\n\n        modelCount = modelCount + 1;\n        var model = \"Model\".concat(modelCount);\n\n        function modCol() {\n            d3.select(\"#modelView\").selectAll(\"p\").style('background-color', hexToRgba(varColor));\n        }\n        modCol();\n\n        d3.select(\"#modelView\").insert(\"p\", \":first-child\") // top stack for results\n        .attr(\"id\", model).text(model).style('background-color', hexToRgba(selVarColor)).on(\"click\", function () {\n            var a = this.style.backgroundColor.replace(/\\s*/g, \"\");\n            var b = hexToRgba(selVarColor).replace(/\\s*/g, \"\");\n            if (a.substr(0, 17) === b.substr(0, 17)) {\n                return; // escapes the function early if the displayed model is clicked\n            }\n            modCol();\n            d3.select(this).style('background-color', hexToRgba(selVarColor));\n            viz(this.id);\n        });\n\n        var rCall = [];\n        rCall[0] = json.call;\n        logArray.push(\"estimate: \".concat(rCall[0]));\n        showLog();\n\n        viz(model);\n    }\n\n    function estimateFail(btn) {\n        estimateLadda.stop(); // stop spinner\n        estimated = true;\n    }\n\n    function selectorSuccess(btn, json) {\n        d3.select(\"#ticker\").text(\"Suggested variables and percent improvement on RMSE: \" + json.vars);\n        console.log(\"selectorSuccess: \", json);\n    }\n\n    function selectorFail(btn) {\n        alert(\"Selector Fail\");\n    }\n\n    estimateLadda.start(); // start spinner\n    makeCorsRequest(urlcall, btn, estimateSuccess, estimateFail, solajsonout);\n}\n\nfunction dataDownload() {\n    zPop();\n    // write links to file & run R CMD\n\n    //package the output as JSON\n    // add call history and package the zparams object as JSON\n    var jsonout = JSON.stringify(zparams);\n    var btn = \"nobutton\";\n\n    var urlcall = rappURL + \"dataapp\"; //base.concat(jsonout);\n    var solajsonout = \"solaJSON=\" + jsonout;\n    console.log(\"urlcall out: \", urlcall);\n    console.log(\"POST out: \", solajsonout);\n\n    function downloadSuccess(btn, json) {\n        console.log(\"dataDownload json in: \", json);\n        zparams.zsessionid = json.sessionid[0];\n\n        // set the link URL\n        if (production) {\n            var logURL = rappURL + \"log_dir/log_\" + zparams.zsessionid + \".txt\";\n            document.getElementById(\"logID\").href = logURL;\n        } else {\n            var logURL = \"rook/log_\" + zparams.zsessionid + \".txt\";\n            document.getElementById(\"logID\").href = logURL;\n        }\n    }\n\n    function downloadFail(btn) {\n        console.log(\"Data have not been downloaded\");\n    }\n\n    makeCorsRequest(urlcall, btn, downloadSuccess, downloadFail, solajsonout);\n}\n\nfunction viz(m) {\n    var mym = +m.substr(5, 5) - 1;\n\n    function removeKids(parent) {\n        while (parent.firstChild) {\n            parent.removeChild(parent.firstChild);\n        }\n    }\n\n    var myparent = document.getElementById(\"resultsView\");\n    removeKids(myparent);\n\n    var json = allResults[mym];\n\n    // pipe in figures to right panel\n    var filelist = new Array();\n    for (var i in json.images) {\n        var zfig = document.createElement(\"img\");\n        zfig.setAttribute(\"src\", json.images[i]);\n        zfig.setAttribute('width', 200);\n        zfig.setAttribute('height', 200);\n        document.getElementById(\"resultsView\").appendChild(zfig);\n    }\n\n    // write the results table\n    var resultsArray = [];\n    for (var key in json.sumInfo) {\n        if (key == \"colnames\") {\n            continue;\n        }\n\n        obj = json.sumInfo[key];\n        resultsArray.push(obj);\n        /* SO says this is important check, but I don't see how it helps here...\n         for (var prop in obj) {\n         // important check that this is objects own property\n         // not from prototype prop inherited\n         if(obj.hasOwnProperty(prop)){\n         alert(prop + \" = \" + obj[prop]);\n         }\n         }  */\n    }\n\n    var table = d3.select(\"#resultsView\").append(\"p\").append(\"table\");\n\n    var thead = table.append(\"thead\");\n    thead.append(\"tr\").selectAll(\"th\").data(json.sumInfo.colnames).enter().append(\"th\").text(function (d) {\n        return d;\n    });\n\n    var tbody = table.append(\"tbody\");\n    tbody.selectAll(\"tr\").data(resultsArray).enter().append(\"tr\").selectAll(\"td\").data(function (d) {\n        return d;\n    }).enter().append(\"td\").text(function (d) {\n        var myNum = Number(d);\n        if (isNaN(myNum)) {\n            return d;\n        }\n        return myNum.toPrecision(3);\n    }).on(\"mouseover\", function () {\n        d3.select(this).style(\"background-color\", \"aliceblue\");\n    }) // for no discernable reason\n    .on(\"mouseout\", function () {\n        d3.select(this).style(\"background-color\", \"#F9F9F9\");\n    }); //(but maybe we'll think of one)\n\n    d3.select(\"#resultsView\").append(\"p\").html(function () {\n        return \"<b>Formula: </b>\".concat(json.call[0]);\n    });\n}\n\n// this function parses the transformation input. variable names are often nested inside one another, e.g., ethwar, war, wars, and so this is handled\nfunction transParse(n) {\n    var out2 = [];\n    var t2 = n;\n    var k2 = 0;\n    var subMe2 = \"_transvar\".concat(k2);\n    var indexed = [];\n\n    // out2 is all matched variables, indexed is an array, each element is an object that contains the matched variables starting index and finishing index.  e.g., n=\"wars+2\", out2=[war, wars], indexed=[{0,2},{0,3}]\n    for (var i in valueKey) {\n        var m2 = n.match(valueKey[i]);\n        if (m2 !== null) {\n            out2.push(m2[0]);\n        }\n\n        var re = new RegExp(valueKey[i], \"g\");\n        var s = n.search(re);\n        if (s != -1) {\n            indexed.push({\n                from: s,\n                to: s + valueKey[i].length\n            });\n        }\n    }\n\n    // nested loop not good, but indexed is not likely to be very large.\n    // if a variable is nested, it is removed from out2\n    // notice, loop is backwards so that index changes don't affect the splice\n    console.log(\"indexed \", indexed);\n    for (var i = indexed.length - 1; i > -1; i--) {\n        for (var j = indexed.length - 1; j > -1; j--) {\n            if (i === j) {\n                continue;\n            }\n            if (indexed[i].from >= indexed[j].from & indexed[i].to <= indexed[j].to) {\n                console.log(i, \" is nested in \", j);\n                out2.splice(i, 1);\n            }\n        }\n    }\n\n    for (var i in out2) {\n        t2 = t2.replace(out2[i], subMe2); //something that'll never be a variable name\n        k2 = k2 + 1;\n        subMe2 = \"_transvar\".concat(k2);\n    }\n\n    if (out2.length > 0) {\n        out2.push(t2);\n        console.log(\"new out \", out2);\n        return out2;\n    } else {\n        alert(\"No variable name found. Perhaps check your spelling?\");\n        return null;\n    }\n}\n\nfunction transform(n, t, typeTransform) {\n    if (production && zparams.zsessionid == \"\") {\n        alert(\"Warning: Data download is not complete. Try again soon.\");\n        return;\n    }\n\n    if (!typeTransform) {\n        t = t.replace(\"+\", \"_plus_\"); // can't send the plus operator\n    }\n\n    console.log(n);\n    console.log(t);\n\n    var btn = document.getElementById('btnEstimate');\n\n    var myn = allNodes[findNodeIndex(n[0])];\n    if (typeof myn === \"undefined\") {\n        var myn = allNodes[findNodeIndex(n)];\n    }\n\n    var outtypes = {\n        varnamesTypes: n,\n        interval: myn.interval,\n        numchar: myn.numchar,\n        nature: myn.nature,\n        binary: myn.binary\n    };\n\n    console.log(myn);\n    // if typeTransform but we already have the metadata\n    if (typeTransform) {\n        if (myn.nature == \"nominal\" & typeof myn.plotvalues !== \"undefined\") {\n            myn.plottype = \"bar\";\n            barsNode(myn);\n            populatePopover();\n            panelPlots();\n            return;\n        } else if (myn.nature != \"nominal\" & typeof myn.plotx !== \"undefined\") {\n            myn.plottype = \"continuous\";\n            densityNode(myn);\n            populatePopover();\n            panelPlots();\n            return;\n        }\n    }\n\n    //package the output as JSON\n    var transformstuff = {\n        zdataurl: dataurl,\n        zvars: n,\n        zsessionid: zparams.zsessionid,\n        transform: t,\n        callHistory: callHistory,\n        typeTransform: typeTransform,\n        typeStuff: outtypes\n    };\n    var jsonout = JSON.stringify(transformstuff);\n    //var base = rappURL+\"transformapp?solaJSON=\"\n\n    var urlcall = rappURL + \"transformapp\"; //base.concat(jsonout);\n    var solajsonout = \"solaJSON=\" + jsonout;\n    console.log(\"urlcall out: \", urlcall);\n    console.log(\"POST out: \", solajsonout);\n\n    function transformSuccess(btn, json) {\n        estimateLadda.stop();\n        console.log(\"json in: \", json);\n\n        if (json.typeTransform[0]) {\n\n            d3.json(json.url, function (error, json) {\n                if (error) return console.warn(error);\n                var jsondata = json;\n\n                for (var key in jsondata) {\n                    var myIndex = findNodeIndex(key);\n                    jQuery.extend(true, allNodes[myIndex], jsondata[key]);\n\n                    if (allNodes[myIndex].plottype === \"continuous\") {\n                        densityNode(allNodes[myIndex]);\n                    } else if (allNodes[myIndex].plottype === \"bar\") {\n                        barsNode(allNodes[myIndex]);\n                    }\n                }\n\n                fakeClick();\n                populatePopover();\n                panelPlots();\n                console.log(allNodes[myIndex]);\n            });\n        } else {\n            callHistory.push({\n                func: \"transform\",\n                zvars: n,\n                transform: t\n            });\n\n            var subseted = false;\n            var rCall = [];\n            rCall[0] = json.call;\n            var newVar = rCall[0][0];\n            trans.push(newVar);\n\n            d3.json(json.url, function (error, json) {\n                if (error) return console.warn(error);\n                var jsondata = json;\n\n                for (var key in jsondata) {\n                    var myIndex = findNodeIndex(key);\n                    if (typeof myIndex !== \"undefined\") {\n                        alert(\"Invalid transformation: this variable name already exists.\");\n                        return;\n                    }\n                    // add transformed variable to the current space\n                    var i = allNodes.length;\n                    var obj1 = {\n                        id: i,\n                        reflexive: false,\n                        \"name\": key,\n                        \"labl\": \"transformlabel\",\n                        data: [5, 15, 20, 0, 5, 15, 20],\n                        count: [.6, .2, .9, .8, .1, .3, .4],\n                        \"nodeCol\": colors(i),\n                        \"baseCol\": colors(i),\n                        \"strokeColor\": selVarColor,\n                        \"strokeWidth\": \"1\",\n                        \"subsetplot\": false,\n                        \"subsetrange\": [\"\", \"\"],\n                        \"setxplot\": false,\n                        \"setxvals\": [\"\", \"\"],\n                        \"grayout\": false,\n                        \"defaultInterval\": jsondata[key][\"interval\"],\n                        \"defaultNumchar\": jsondata[key][\"numchar\"],\n                        \"defaultNature\": jsondata[key][\"nature\"],\n                        \"defaultBinary\": jsondata[key][\"binary\"]\n                    };\n\n                    jQuery.extend(true, obj1, jsondata[key]);\n                    allNodes.push(obj1);\n\n                    scaffoldingPush(rCall[0]);\n                    valueKey.push(newVar);\n                    nodes.push(allNodes[i]);\n                    fakeClick();\n                    panelPlots();\n\n                    if (allNodes[i].plottype === \"continuous\") {\n                        densityNode(allNodes[i]);\n                    } else if (allNodes[i].plottype === \"bar\") {\n                        barsNode(allNodes[i]);\n                    }\n                } //for\n\n            });\n\n            // update the log\n            logArray.push(\"transform: \".concat(rCall[0]));\n            showLog();\n        }\n    }\n\n    function transformFail(btn) {\n        alert(\"transform fail\");\n        estimateLadda.stop();\n    }\n\n    estimateLadda.start(); // start spinner\n    makeCorsRequest(urlcall, btn, transformSuccess, transformFail, solajsonout);\n}\n\nfunction scaffoldingPush(v) {\n    // adding a variable to the variable list after a transformation\n    d3.select(\"#tab1\").data(v).append(\"p\").attr(\"id\", function () {\n        return v[0].replace(/\\W/g, \"_\");\n    }).text(v[0]).style('background-color', hexToRgba(selVarColor)).attr(\"data-container\", \"body\").attr(\"data-toggle\", \"popover\").attr(\"data-trigger\", \"hover\").attr(\"data-placement\", \"right\").attr(\"data-html\", \"true\").attr(\"onmouseover\", \"$(this).popover('toggle');\").attr(\"onmouseout\", \"$(this).popover('toggle');\").attr(\"data-original-title\", \"Summary Statistics\").on(\"click\", function varClick() {\n        // we've added a new variable, so we need to add the listener\n        d3.select(this).style('background-color', function (d) {\n            var myText = d3.select(this).text();\n            var myColor = d3.select(this).style('background-color');\n            var mySC = allNodes[findNodeIndex(myText)].strokeColor;\n\n            zparams.zvars = []; //empty the zvars array\n            if (d3.rgb(myColor).toString() === varColor.toString()) {\n                // we are adding a var\n                if (nodes.length == 0) {\n                    nodes.push(findNode(myText));\n                    nodes[0].reflexive = true;\n                } else {\n                    nodes.push(findNode(myText));\n                }\n                return hexToRgba(selVarColor);\n            } else {\n                // dropping a variable\n\n                nodes.splice(findNode(myText)[\"index\"], 1);\n                spliceLinksForNode(findNode(myText));\n\n                if (mySC == dvColor) {\n                    var dvIndex = zparams.zdv.indexOf(myText);\n                    if (dvIndex > -1) {\n                        zparams.zdv.splice(dvIndex, 1);\n                    }\n                } else if (mySC == csColor) {\n                    var csIndex = zparams.zcross.indexOf(myText);\n                    if (csIndex > -1) {\n                        zparams.zcross.splice(csIndex, 1);\n                    }\n                } else if (mySC == timeColor) {\n                    var timeIndex = zparams.ztime.indexOf(myText);\n                    if (timeIndex > -1) {\n                        zparams.ztime.splice(dvIndex, 1);\n                    }\n                } else if (mySC == nomColor) {\n                    var nomIndex = zparams.znom.indexOf(myText);\n                    if (nomIndex > -1) {\n                        zparams.znom.splice(dvIndex, 1);\n                    }\n                }\n\n                nodeReset(allNodes[findNodeIndex(myText)]);\n                borderState();\n                return varColor;\n            }\n        });\n        fakeClick();\n        panelPlots();\n    });\n    populatePopover(); // pipes in the summary stats\n\n    // drop down menu for tranformation toolbar\n    d3.select(\"#transSel\").data(v).append(\"option\").text(function (d) {\n        return d;\n    });\n}\n\n// below from http://www.html5rocks.com/en/tutorials/cors/ for cross-origin resource sharing\n// Create the XHR object.\nfunction createCORSRequest(method, url, callback) {\n    var xhr = new XMLHttpRequest();\n    if (\"withCredentials\" in xhr) {\n        // XHR for Chrome/Firefox/Opera/Safari.\n        xhr.open(method, url, true);\n    } else if (typeof XDomainRequest != \"undefined\") {\n        // XDomainRequest for IE.\n        xhr = new XDomainRequest();\n        xhr.open(method, url);\n    } else {\n        // CORS not supported.\n        xhr = null;\n    }\n    //    xhr.setRequestHeader('Content-Type', 'text/plain');\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    return xhr;\n}\n\n// Make the actual CORS request.\nfunction makeCorsRequest(url, btn, callback, warningcallback, jsonstring) {\n    var xhr = createCORSRequest('POST', url);\n    if (!xhr) {\n        alert('CORS not supported');\n        return;\n    }\n    // Response handlers for asynchronous load\n    // onload or onreadystatechange?\n\n    xhr.onload = function () {\n        var text = xhr.responseText;\n        console.log(\"text \", text);\n\n        try {\n            var json = JSON.parse(text); // should wrap in try / catch\n            var names = Object.keys(json);\n        } catch (err) {\n            estimateLadda.stop();\n            selectLadda.stop();\n            console.log(err);\n            alert('Error: Could not parse incoming JSON.');\n        }\n\n        if (names[0] == \"warning\") {\n            warningcallback(btn);\n            alert(\"Warning: \" + json.warning);\n        } else {\n            callback(btn, json);\n        }\n    };\n    xhr.onerror = function () {\n        // note: xhr.readystate should be 4, and status should be 200.  a status of 0 occurs when the url becomes too large\n        if (xhr.status == 0) {\n            alert('There was an error making the request. xmlhttprequest status is 0.');\n        } else if (xhr.readyState != 4) {\n            alert('There was an error making the request. xmlhttprequest readystate is not 4.');\n        } else {\n            alert('Woops, there was an error making the request.');\n        }\n        console.log(xhr);\n        estimateLadda.stop();\n        selectLadda.stop();\n    };\n    xhr.send(jsonstring);\n}\n\nfunction legend(c) {\n    // this could be made smarter\n    if (zparams.ztime.length != 0 | zparams.zcross.length != 0 | zparams.zdv.length != 0 | zparams.znom.length != 0) {\n        document.getElementById(\"legend\").setAttribute(\"style\", \"display:block\");\n    } else {\n        document.getElementById(\"legend\").setAttribute(\"style\", \"display:none\");\n    }\n\n    if (zparams.ztime.length == 0) {\n        document.getElementById(\"timeButton\").setAttribute(\"class\", \"clearfix hide\");\n    } else {\n        document.getElementById(\"timeButton\").setAttribute(\"class\", \"clearfix show\");\n    }\n    if (zparams.zcross.length == 0) {\n        document.getElementById(\"csButton\").setAttribute(\"class\", \"clearfix hide\");\n    } else {\n        document.getElementById(\"csButton\").setAttribute(\"class\", \"clearfix show\");\n    }\n    if (zparams.zdv.length == 0) {\n        document.getElementById(\"dvButton\").setAttribute(\"class\", \"clearfix hide\");\n    } else {\n        document.getElementById(\"dvButton\").setAttribute(\"class\", \"clearfix show\");\n    }\n    if (zparams.znom.length == 0) {\n        document.getElementById(\"nomButton\").setAttribute(\"class\", \"clearfix hide\");\n    } else {\n        document.getElementById(\"nomButton\").setAttribute(\"class\", \"clearfix show\");\n    }\n\n    borderState();\n}\n\nfunction reset() {\n    location.reload();\n}\n\n// programmatically deselecting every selected variable...\nfunction erase() {\n    leftpanelMedium();\n    rightpanelMedium();\n    document.getElementById(\"legend\").setAttribute(\"style\", \"display:none\");\n\n    tabLeft('tab1');\n\n    jQuery.fn.d3Click = function () {\n        this.children().each(function (i, e) {\n            var mycol = d3.rgb(this.style.backgroundColor);\n            if (mycol.toString() === varColor.toString()) {\n                return;\n            }\n            var evt = document.createEvent(\"MouseEvents\");\n            evt.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n            e.dispatchEvent(evt);\n        });\n    };\n    $(\"#tab1\").d3Click();\n}\n\nfunction deselect(d) {\n    console.log(d);\n}\n\n// http://www.tutorials2learn.com/tutorials/scripts/javascript/xml-parser-javascript.html\nfunction loadXMLDoc(XMLname) {\n    var xmlDoc;\n    if (window.XMLHttpRequest) {\n        xmlDoc = new window.XMLHttpRequest();\n        xmlDoc.open(\"GET\", XMLname, false);\n        xmlDoc.send(\"\");\n        return xmlDoc.responseXML;\n    }\n    // IE 5 and IE 6\n    else if (ActiveXObject(\"Microsoft.XMLDOM\")) {\n            xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n            xmlDoc.async = false;\n            xmlDoc.load(XMLname);\n            return xmlDoc;\n        }\n    alert(\"Error loading document!\");\n    return null;\n}\n\nfunction tabLeft(tab) {\n\n    if (tab != \"tab3\") {\n        lefttab = tab;\n    }\n    var tabi = tab.substring(3);\n\n    document.getElementById('tab1').style.display = 'none';\n    document.getElementById('tab2').style.display = 'none';\n    document.getElementById('tab3').style.display = 'none';\n\n    if (tab === \"tab1\") {\n        summaryHold = false;\n        document.getElementById('btnSubset').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnVariables').setAttribute(\"class\", \"btn active\");\n        document.getElementById(\"btnSelect\").style.display = 'none';\n\n        d3.select(\"#leftpanel\").attr(\"class\", \"sidepanel container clearfix\");\n    } else if (tab === \"tab2\") {\n        summaryHold = false;\n        document.getElementById('btnVariables').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnSubset').setAttribute(\"class\", \"btn active\");\n\n        d3.select(\"#leftpanel\").attr(\"class\", function (d) {\n            if (this.getAttribute(\"class\") === \"sidepanel container clearfix expandpanel\") {\n                document.getElementById(\"btnSelect\").style.display = 'none';\n                return \"sidepanel container clearfix\";\n            } else {\n                document.getElementById(\"btnSelect\").style.display = 'block';\n                return \"sidepanel container clearfix expandpanel\";\n            }\n        });\n    } else {\n        document.getElementById('btnSubset').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnVariables').setAttribute(\"class\", \"btn btn-default\");\n\n        d3.select(\"#leftpanel\").attr(\"class\", \"sidepanel container clearfix\");\n    }\n\n    document.getElementById(tab).style.display = 'block';\n}\n\nfunction tabRight(tabid) {\n\n    document.getElementById('models').style.display = 'none';\n    document.getElementById('setx').style.display = 'none';\n    document.getElementById('results').style.display = 'none';\n\n    if (tabid == \"btnModels\") {\n        document.getElementById('btnSetx').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnResults').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnModels').setAttribute(\"class\", \"btn active\");\n        document.getElementById('models').style.display = 'block';\n\n        d3.select(\"#rightpanel\").attr(\"class\", \"sidepanel container clearfix\");\n    } else if (tabid == \"btnSetx\") {\n        document.getElementById('btnModels').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnResults').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnSetx').setAttribute(\"class\", \"btn active\");\n        document.getElementById('setx').style.display = 'block';\n\n        if (righttab == \"btnSetx\" | d3.select(\"#rightpanel\").attr(\"class\") == \"sidepanel container clearfix\") {\n            toggleR();\n        };\n    } else if (tabid == \"btnResults\") {\n        document.getElementById('btnModels').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnSetx').setAttribute(\"class\", \"btn btn-default\");\n        document.getElementById('btnResults').setAttribute(\"class\", \"btn active\");\n        document.getElementById('results').style.display = 'block';\n\n        if (estimated === false) {\n            d3.select(\"#rightpanel\").attr(\"class\", \"sidepanel container clearfix\");\n        } else if (righttab == \"btnResults\" | d3.select(\"#rightpanel\").attr(\"class\") == \"sidepanel container clearfix\") {\n            toggleR();\n        };\n    }\n\n    righttab = tabid; // a global that may be of use\n\n    function toggleR() {\n        d3.select(\"#rightpanel\").attr(\"class\", function (d) {\n            if (this.getAttribute(\"class\") === \"sidepanel container clearfix expandpanel\") {\n                return \"sidepanel container clearfix\";\n            } else {\n                return \"sidepanel container clearfix expandpanel\";\n            }\n        });\n    }\n}\n\nfunction varSummary(d) {\n\n    var rint = d3.format(\"r\");\n\n    var summarydata = [],\n        tmpDataset = [],\n        t1 = [\"Mean:\", \"Median:\", \"Most Freq:\", \"Occurrences:\", \"Median Freq:\", \"Occurrences:\", \"Least Freq:\", \"Occurrences:\", \"Stand.Dev:\", \"Minimum:\", \"Maximum:\", \"Invalid:\", \"Valid:\", \"Uniques:\", \"Herfindahl:\"],\n        t2 = [(+d.mean).toPrecision(4).toString(), (+d.median).toPrecision(4).toString(), d.mode, rint(d.freqmode), d.mid, rint(d.freqmid), d.fewest, rint(d.freqfewest), (+d.sd).toPrecision(4).toString(), (+d.min).toPrecision(4).toString(), (+d.max).toPrecision(4).toString(), rint(d.invalid), rint(d.valid), rint(d.uniques), (+d.herfindahl).toPrecision(4).toString()],\n        i,\n        j;\n    if (priv) {\n        if (d.meanCI) {\n            t1 = [\"Mean:\", \"Median:\", \"Most Freq:\", \"Occurrences:\", \"Median Freq:\", \"Occurrences:\", \"Least Freq:\", \"Occurrences:\", \"Stand.Dev:\", \"Minimum:\", \"Maximum:\", \"Invalid:\", \"Valid:\", \"Uniques:\", \"Herfindahl:\"], t2 = [(+d.mean).toPrecision(2).toString() + \" (\" + (+d.meanCI.lowerBound).toPrecision(2).toString() + \" - \" + (+d.meanCI.upperBound).toPrecision(2).toString() + \")\", (+d.median).toPrecision(4).toString(), d.mode, rint(d.freqmode), d.mid, rint(d.freqmid), d.fewest, rint(d.freqfewest), (+d.sd).toPrecision(4).toString(), (+d.min).toPrecision(4).toString(), (+d.max).toPrecision(4).toString(), rint(d.invalid), rint(d.valid), rint(d.uniques), (+d.herfindahl).toPrecision(4).toString()], i, j;\n        }\n    }\n\n    for (i = 0; i < t1.length; i++) {\n        if (t2[i].indexOf(\"NaN\") > -1 | t2[i] == \"NA\" | t2[i] == \"\") continue;\n        tmpDataset = [];\n        tmpDataset.push(t1[i]);\n        tmpDataset.push(t2[i]);\n        summarydata.push(tmpDataset);\n    };\n\n    //  console.log(summarydata);\n    d3.select(\"#tab3\") //tab when you mouseover a pebble\n    .select(\"p\").html(\"<center><b>\" + d.name + \"</b><br><i>\" + d.labl + \"</i></center>\").append(\"table\").selectAll(\"tr\").data(summarydata).enter().append(\"tr\").selectAll(\"td\").data(function (d) {\n        return d;\n    }).enter().append(\"td\").text(function (d) {\n        return d;\n    }).on(\"mouseover\", function () {\n        d3.select(this).style(\"background-color\", \"aliceblue\");\n    }) // for no discernable reason\n    .on(\"mouseout\", function () {\n        d3.select(this).style(\"background-color\", \"#F9F9F9\");\n    }); //(but maybe we'll think of one)\n    //    .style(\"font-size\", \"12px\");\n\n\n    var plotsvg = d3.select(\"#tab3\").selectAll(\"svg\").remove();\n\n    if (typeof d.plottype === \"undefined\") {\n        // .properties is undefined for some vars\n        return;\n    } else if (d.plottype === \"continuous\") {\n        density(d, div = \"varSummary\", priv);\n    } else if (d.plottype === \"bar\") {\n        bars(d, div = \"varSummary\", priv);\n    } else {\n        var plotsvg = d3.select(\"#tab3\") // no graph to draw, but still need to remove previous graph\n        .selectAll(\"svg\").remove();\n    };\n}\n\nfunction populatePopover() {\n    d3.select(\"#tab1\").selectAll(\"p\").attr(\"data-content\", function (d) {\n        var onNode = findNodeIndex(d);\n        return popoverContent(allNodes[onNode]);\n    });\n}\n\nfunction popoverContent(d) {\n\n    var rint = d3.format(\"r\");\n\n    var outtext = \"\";\n\n    if (d.labl != \"\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Label</label><div class='col-sm-6'><p class='form-control-static'><i>\" + d.labl + \"</i></p></div></div>\";\n    }\n\n    if (d.mean != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Mean</label><div class='col-sm-6'><p class='form-control-static'>\";\n        if (priv && d.meanCI) {\n            outtext += (+d.mean).toPrecision(2).toString() + \" (\" + (+d.meanCI.lowerBound).toPrecision(2).toString() + \" - \" + (+d.meanCI.upperBound).toPrecision(2).toString() + \")\";\n        } else {\n            outtext += (+d.mean).toPrecision(4).toString();\n        }\n        outtext += \"</p></div></div>\";\n    }\n\n    if (d.median != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Median</label><div class='col-sm-6'><p class='form-control-static'>\" + (+d.median).toPrecision(4).toString() + \"</p></div></div>\";\n    }\n\n    if (d.mode != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Most Freq</label><div class='col-sm-6'><p class='form-control-static'>\" + d.mode + \"</p></div></div>\";\n    }\n\n    if (d.freqmode != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Occurrences</label><div class='col-sm-6'><p class='form-control-static'>\" + rint(d.freqmode) + \"</p></div></div>\";\n    }\n\n    if (d.mid != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Median Freq</label><div class='col-sm-6'><p class='form-control-static'>\" + d.mid + \"</p></div></div>\";\n    }\n\n    if (d.freqmid != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Occurrences</label><div class='col-sm-6'><p class='form-control-static'>\" + rint(d.freqmid) + \"</p></div></div>\";\n    }\n    if (d.fewest != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Least Freq</label><div class='col-sm-6'><p class='form-control-static'>\" + d.fewest + \"</p></div></div>\";\n    }\n\n    if (d.freqfewest != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Occurrences</label><div class='col-sm-6'><p class='form-control-static'>\" + rint(d.freqfewest) + \"</p></div></div>\";\n    }\n\n    if (d.sd != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Stand Dev</label><div class='col-sm-6'><p class='form-control-static'>\" + (+d.sd).toPrecision(4).toString() + \"</p></div></div>\";\n    }\n\n    if (d.max != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Maximum</label><div class='col-sm-6'><p class='form-control-static'>\" + (+d.max).toPrecision(4).toString() + \"</p></div></div>\";\n    }\n\n    if (d.min != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Minimum</label><div class='col-sm-6'><p class='form-control-static'>\" + (+d.min).toPrecision(4).toString() + \"</p></div></div>\";\n    }\n    if (d.invalid != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Invalid</label><div class='col-sm-6'><p class='form-control-static'>\" + rint(d.invalid) + \"</p></div></div>\";\n    }\n    if (d.valid != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Valid</label><div class='col-sm-6'><p class='form-control-static'>\" + rint(d.valid) + \"</p></div></div>\";\n    }\n\n    if (d.uniques != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Uniques</label><div class='col-sm-6'><p class='form-control-static'>\" + rint(d.uniques) + \"</p></div></div>\";\n    }\n    if (d.herfindahl != \"NA\") {\n        outtext = outtext + \"<div class='form-group'><label class='col-sm-4 control-label'>Herfindahl</label><div class='col-sm-6'><p class='form-control-static'>\" + (+d.herfindahl).toPrecision(4).toString() + \"</p></div></div>\";\n    }\n\n    return outtext;\n}\n\nfunction popupX(d) {\n\n    var tsf = d3.format(\".4r\");\n    var rint = d3.format(\"r\");\n\n    //Create the tooltip label\n    d3.select(\"#tooltip\").style(\"left\", tempX + \"px\").style(\"top\", tempY + \"px\").select(\"#tooltiptext\").html(\"<div class='form-group'><label class='col-sm-4 control-label'>Mean</label><div class='col-sm-6'><p class='form-control-static'>\" + tsf(d.mean) + \"</p></div></div>\" + \"<div class='form-group'><label class='col-sm-4 control-label'>Median</label><div class='col-sm-6'><p class='form-control-static'>\" + tsf(d.median) + \"</p></div></div>\" + \"<div class='form-group'><label class='col-sm-4 control-label'>Mode</label><div class='col-sm-6'><p class='form-control-static'>\" + d.mode + \"</p></div></div>\" + \"<div class='form-group'><label class='col-sm-4 control-label'>Stand Dev</label><div class='col-sm-6'><p class='form-control-static'>\" + tsf(d.sd) + \"</p></div></div>\" + \"<div class='form-group'><label class='col-sm-4 control-label'>Maximum</label><div class='col-sm-6'><p class='form-control-static'>\" + tsf(d.max) + \"</p></div></div>\" + \"<div class='form-group'><label class='col-sm-4 control-label'>Minimum</label><div class='col-sm-6'><p class='form-control-static'>\" + tsf(d.min) + \"</p></div></div>\" + \"<div class='form-group'><label class='col-sm-4 control-label'>Valid</label><div class='col-sm-6'><p class='form-control-static'>\" + rint(d.valid) + \"</p></div></div>\" + \"<div class='form-group'><label class='col-sm-4 control-label'>Invalid</label><div class='col-sm-6'><p class='form-control-static'>\" + rint(d.invalid) + \"</p></div></div>\");\n}\n\nfunction panelPlots() {\n    // build arrays from nodes in main\n    var varArray = [];\n    var idArray = [];\n\n    for (var j = 0; j < nodes.length; j++) {\n        varArray.push(nodes[j].name.replace(/\\(|\\)/g, \"\"));\n        idArray.push(nodes[j].id);\n    }\n\n    //remove all plots, could be smarter here\n    d3.select(\"#setx\").selectAll(\"svg\").remove();\n    d3.select(\"#tab2\").selectAll(\"svg\").remove();\n\n    for (var i = 0; i < varArray.length; i++) {\n        allNodes[idArray[i]].setxplot = false;\n        allNodes[idArray[i]].subsetplot = false;\n        if (allNodes[idArray[i]].plottype === \"continuous\" & allNodes[idArray[i]].setxplot == false) {\n            allNodes[idArray[i]].setxplot = true;\n            console.log(priv);\n            density(allNodes[idArray[i]], div = \"setx\", priv);\n            allNodes[idArray[i]].subsetplot = true;\n            density(allNodes[idArray[i]], div = \"subset\", priv);\n        } else if (allNodes[idArray[i]].plottype === \"bar\" & allNodes[idArray[i]].setxplot == false) {\n            allNodes[idArray[i]].setxplot = true;\n            bars(allNodes[idArray[i]], div = \"setx\", priv);\n            allNodes[idArray[i]].subsetplot = true;\n            barsSubset(allNodes[idArray[i]]);\n        }\n    }\n\n    d3.select(\"#setx\").selectAll(\"svg\").each(function () {\n        d3.select(this);\n        var regstr = /(.+)_setx_(\\d+)/;\n        var myname = regstr.exec(this.id);\n        var nodeid = myname[2];\n        myname = myname[1];\n        var j = varArray.indexOf(myname);\n\n        if (j == -1) {\n            allNodes[nodeid].setxplot = false;\n            var temp = \"#\".concat(myname, \"_setx_\", nodeid);\n            d3.select(temp).remove();\n\n            allNodes[nodeid].subsetplot = false;\n            var temp = \"#\".concat(myname, \"_tab2_\", nodeid);\n            d3.select(temp).remove();\n        }\n    });\n}\n\n// easy functions to collapse panels to base\nfunction rightpanelMedium() {\n    d3.select(\"#rightpanel\").attr(\"class\", \"sidepanel container clearfix\");\n}\n\nfunction leftpanelMedium() {\n    d3.select(\"#leftpanel\").attr(\"class\", \"sidepanel container clearfix\");\n}\n\n// function to convert color codes\nfunction hexToRgba(hex) {\n    var h = hex.replace('#', '');\n\n    var bigint = parseInt(h, 16);\n    var r = bigint >> 16 & 255;\n    var g = bigint >> 8 & 255;\n    var b = bigint & 255;\n    var a = '0.5';\n\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n}\n\n// function takes a node and a color and updates zparams\nfunction setColors(n, c) {\n\n    if (n.strokeWidth == '1') {\n        // adding time, cs, dv, nom to a node with no stroke\n        n.strokeWidth = '4';\n        n.strokeColor = c;\n        n.nodeCol = taggedColor;\n        if (dvColor == c) {\n            // check if array, if not, make it an array\n            //  console.log(Object.prototype.toString.call(zparams.zdv));\n            zparams.zdv = Object.prototype.toString.call(zparams.zdv) == \"[object Array]\" ? zparams.zdv : [];\n            zparams.zdv.push(n.name);\n        } else if (csColor == c) {\n            zparams.zcross = Object.prototype.toString.call(zparams.zcross) == \"[object Array]\" ? zparams.zcross : [];\n            zparams.zcross.push(n.name);\n        } else if (timeColor == c) {\n            zparams.ztime = Object.prototype.toString.call(zparams.ztime) == \"[object Array]\" ? zparams.ztime : [];\n            zparams.ztime.push(n.name);\n        } else if (nomColor == c) {\n            zparams.znom = Object.prototype.toString.call(zparams.znom) == \"[object Array]\" ? zparams.znom : [];\n            zparams.znom.push(n.name);\n            allNodes[findNodeIndex(n.name)].nature = \"nominal\";\n            transform(n.name, t = null, typeTransform = true);\n        }\n\n        d3.select(\"#tab1\").select(\"p#\".concat(n.name)).style('background-color', hexToRgba(c));\n    } else if (n.strokeWidth == '4') {\n        if (c == n.strokeColor) {\n            // deselecting time, cs, dv, nom\n            n.strokeWidth = '1';\n            n.strokeColor = selVarColor;\n            n.nodeCol = colors(n.id);\n            d3.select(\"#tab1\").select(\"p#\".concat(n.name)).style('background-color', hexToRgba(selVarColor));\n\n            if (dvColor == c) {\n                var dvIndex = zparams.zdv.indexOf(n.name);\n                if (dvIndex > -1) {\n                    zparams.zdv.splice(dvIndex, 1);\n                }\n            } else if (csColor == c) {\n                var csIndex = zparams.zcross.indexOf(n.name);\n                if (csIndex > -1) {\n                    zparams.zcross.splice(csIndex, 1);\n                }\n            } else if (timeColor == c) {\n                var timeIndex = zparams.ztime.indexOf(n.name);\n                if (timeIndex > -1) {\n                    zparams.ztime.splice(timeIndex, 1);\n                }\n            } else if (nomColor == c) {\n                var nomIndex = zparams.znom.indexOf(n.name);\n                if (nomIndex > -1) {\n                    zparams.znom.splice(nomIndex, 1);\n                    allNodes[findNodeIndex(n.name)].nature = allNodes[findNodeIndex(n.name)].defaultNature;\n                    transform(n.name, t = null, typeTransform = true);\n                }\n            }\n        } else {\n            // deselecting time, cs, dv, nom AND changing it to time, cs, dv, nom\n            if (dvColor == n.strokeColor) {\n                var dvIndex = zparams.zdv.indexOf(n.name);\n                if (dvIndex > -1) {\n                    zparams.zdv.splice(dvIndex, 1);\n                }\n            } else if (csColor == n.strokeColor) {\n                var csIndex = zparams.zcross.indexOf(n.name);\n                if (csIndex > -1) {\n                    zparams.zcross.splice(csIndex, 1);\n                }\n            } else if (timeColor == n.strokeColor) {\n                var timeIndex = zparams.ztime.indexOf(n.name);\n                if (timeIndex > -1) {\n                    zparams.ztime.splice(timeIndex, 1);\n                }\n            } else if (nomColor == n.strokeColor) {\n                var nomIndex = zparams.znom.indexOf(n.name);\n                if (nomIndex > -1) {\n                    zparams.znom.splice(nomIndex, 1);\n                    allNodes[findNodeIndex(n.name)].nature = allNodes[findNodeIndex(n.name)].defaultNature;\n                    transform(n.name, t = null, typeTransform = true);\n                }\n            }\n            n.strokeColor = c;\n            d3.select(\"#tab1\").select(\"p#\".concat(n.name)).style('background-color', hexToRgba(c));\n\n            if (dvColor == c) {\n                zparams.zdv.push(n.name);\n            } else if (csColor == c) {\n                zparams.zcross.push(n.name);\n            } else if (timeColor == c) {\n                zparams.ztime.push(n.name);\n            } else if (nomColor == c) {\n                zparams.znom.push(n.name);\n                allNodes[findNodeIndex(n.name)].nature = \"nominal\";\n                transform(n.name, t = null, typeTransform = true);\n            }\n        }\n    }\n}\n\nfunction borderState() {\n    if (zparams.zdv.length > 0) {\n        $('#dvButton .rectColor svg circle').attr('stroke', dvColor);\n    } else {\n        $('#dvButton').css('border-color', '#ccc');\n    }\n    if (zparams.zcross.length > 0) {\n        $('#csButton .rectColor svg circle').attr('stroke', csColor);\n    } else {\n        $('#csButton').css('border-color', '#ccc');\n    }\n    if (zparams.ztime.length > 0) {\n        $('#timeButton .rectColor svg circle').attr('stroke', timeColor);\n    } else {\n        $('#timeButton').css('border-color', '#ccc');\n    }\n    if (zparams.znom.length > 0) {\n        $('#nomButton .rectColor svg circle').attr('stroke', nomColor);\n    } else {\n        $('#nomButton').css('border-color', '#ccc');\n    }\n}\n\n// small appearance resets, but perhaps this will become a hard reset back to all original allNode values?\nfunction nodeReset(n) {\n    n.strokeColor = selVarColor;\n    n.strokeWidth = \"1\";\n    n.nodeCol = n.baseCol;\n}\n\nfunction subsetSelect(btn) {\n    if (dataurl) {\n        zparams.zdataurl = dataurl;\n    }\n\n    if (production && zparams.zsessionid == \"\") {\n        alert(\"Warning: Data download is not complete. Try again soon.\");\n        return;\n    }\n\n    zparams.zvars = [];\n    zparams.zplot = [];\n\n    var subsetEmpty = true;\n\n    // is this the same as zPop()?\n    for (var j = 0; j < nodes.length; j++) {\n        //populate zvars and zsubset arrays\n        zparams.zvars.push(nodes[j].name);\n        var temp = nodes[j].id;\n        zparams.zsubset[j] = allNodes[temp].subsetrange;\n        if (zparams.zsubset[j].length > 0) {\n            if (zparams.zsubset[j][0] != \"\") {\n                zparams.zsubset[j][0] = Number(zparams.zsubset[j][0]);\n            }\n            if (zparams.zsubset[j][1] != \"\") {\n                zparams.zsubset[j][1] = Number(zparams.zsubset[j][1]);\n            }\n        }\n        zparams.zplot.push(allNodes[temp].plottype);\n        if (zparams.zsubset[j][1] != \"\") {\n            subsetEmpty = false;\n        } //only need to check one\n    }\n\n    if (subsetEmpty == true) {\n        alert(\"Warning: No new subset selected.\");\n        return;\n    }\n\n    var outtypes = [];\n    for (var j = 0; j < allNodes.length; j++) {\n        outtypes.push({\n            varnamesTypes: allNodes[j].name,\n            nature: allNodes[j].nature,\n            numchar: allNodes[j].numchar,\n            binary: allNodes[j].binary,\n            interval: allNodes[j].interval\n        });\n    }\n\n    var subsetstuff = {\n        zdataurl: zparams.zdataurl,\n        zvars: zparams.zvars,\n        zsubset: zparams.zsubset,\n        zsessionid: zparams.zsessionid,\n        zplot: zparams.zplot,\n        callHistory: callHistory,\n        typeStuff: outtypes\n    };\n\n    var jsonout = JSON.stringify(subsetstuff);\n    var urlcall = rappURL + \"subsetapp\";\n    var solajsonout = \"solaJSON=\" + jsonout;\n    console.log(\"urlcall out: \", urlcall);\n    console.log(\"POST out: \", solajsonout);\n\n    function subsetSelectSuccess(btn, json) {\n        selectLadda.stop(); // stop motion\n        $(\"#btnVariables\").trigger(\"click\"); // programmatic clicks\n        $(\"#btnModels\").trigger(\"click\");\n\n        var grayOuts = [];\n\n        var rCall = [];\n        rCall[0] = json.call;\n\n        // store contents of the pre-subset space\n        zPop();\n        var myNodes = jQuery.extend(true, [], allNodes);\n        var myParams = jQuery.extend(true, {}, zparams);\n        var myTrans = jQuery.extend(true, [], trans);\n        var myForce = jQuery.extend(true, [], forcetoggle);\n        var myPreprocess = jQuery.extend(true, {}, preprocess);\n        var myLog = jQuery.extend(true, [], logArray);\n        var myHistory = jQuery.extend(true, [], callHistory);\n\n        spaces[myspace] = {\n            \"allNodes\": myNodes,\n            \"zparams\": myParams,\n            \"trans\": myTrans,\n            \"force\": myForce,\n            \"preprocess\": myPreprocess,\n            \"logArray\": myLog,\n            \"callHistory\": myHistory\n        };\n\n        // remove pre-subset svg\n        var selectMe = \"#m\".concat(myspace);\n        d3.select(selectMe).attr('class', 'item');\n        selectMe = \"#whitespace\".concat(myspace);\n        d3.select(selectMe).remove();\n\n        myspace = spaces.length;\n        callHistory.push({\n            func: \"subset\",\n            zvars: jQuery.extend(true, [], zparams.zvars),\n            zsubset: jQuery.extend(true, [], zparams.zsubset),\n            zplot: jQuery.extend(true, [], zparams.zplot)\n        });\n\n        // this is to be used to gray out and remove listeners for variables that have been subsetted out of the data\n        function varOut(v) {\n            // if in nodes, remove\n            // gray out in left panel\n            // make unclickable in left panel\n            for (var i = 0; i < v.length; i++) {\n                var selectMe = v[i].replace(/\\W/g, \"_\");\n                document.getElementById(selectMe).style.color = hexToRgba(grayColor);\n                selectMe = \"p#\".concat(selectMe);\n                d3.select(selectMe).on(\"click\", null);\n            }\n        }\n\n        logArray.push(\"subset: \".concat(rCall[0]));\n        showLog();\n        reWriteLog();\n\n        d3.select(\"#innercarousel\").append('div').attr('class', 'item active').attr('id', function () {\n            return \"m\".concat(myspace.toString());\n        }).append('svg').attr('id', 'whitespace');\n        svg = d3.select(\"#whitespace\");\n\n        d3.json(json.url, function (error, json) {\n            if (error) return console.warn(error);\n            var jsondata = json;\n\n            for (var key in jsondata) {\n                var myIndex = findNodeIndex(key);\n\n                allNodes[myIndex].plotx = undefined;\n                allNodes[myIndex].ploty = undefined;\n                allNodes[myIndex].plotvalues = undefined;\n                allNodes[myIndex].plottype = \"\";\n\n                jQuery.extend(true, allNodes[myIndex], jsondata[key]);\n\n                allNodes[myIndex].subsetplot = false;\n                allNodes[myIndex].subsetrange = [\"\", \"\"];\n                allNodes[myIndex].setxplot = false;\n                allNodes[myIndex].setxvals = [\"\", \"\"];\n\n                if (allNodes[myIndex].valid == 0) {\n                    grayOuts.push(allNodes[myIndex].name);\n                    allNodes[myIndex].grayout = true;\n                }\n            }\n\n            rePlot();\n            populatePopover();\n            layout(v = \"add\");\n        });\n\n        varOut(grayOuts);\n    }\n\n    function subsetSelectFail(btn) {\n        selectLadda.stop(); //stop motion\n    }\n\n    selectLadda.start(); //start button motion\n    makeCorsRequest(urlcall, btn, subsetSelectSuccess, subsetSelectFail, solajsonout);\n}\n\nfunction readPreprocess(url, p, v, callback) {\n    console.log(url);\n    d3.json(url, function (error, json) {\n        if (error) return console.warn(error);\n        var jsondata = json;\n\n        console.log(\"inside readPreprocess function\");\n        console.log(jsondata);\n        console.log(jsondata[\"variables\"]);\n\n        if (jsondata.dataset.priv) {\n            priv = jsondata[\"dataset\"][\"priv\"];\n        };\n\n        //copying the object\n        for (var key in jsondata[\"variables\"]) {\n            p[key] = jsondata[\"variables\"][key];\n        }\n\n        if (typeof callback === \"function\") {\n            callback();\n        }\n    });\n}\n\nfunction about() {\n    $('#about').show();\n}\n\nfunction closeabout() {\n    $('#about').hide();\n}\n\nfunction opencite() {\n    $('#cite').show();\n}\n\nfunction closecite(toggle) {\n    if (toggle == false) {\n        $('#cite').hide();\n    }\n}\n\nfunction clickcite(toggle) {\n    if (toggle == false) {\n        $('#cite').show();\n        return true;\n    } else {\n        $('#cite').hide();\n        return false;\n    }\n}\n\n// function to remove all the children svgs inside subset and setx divs\nfunction rePlot() {\n    d3.select(\"#tab2\").selectAll(\"svg\").remove();\n\n    d3.select(\"#setx\").selectAll(\"svg\").remove();\n\n    // make this smarter\n    for (var i = 0; i < allNodes.length; i++) {\n        allNodes[i].setxplot = false;\n        allNodes[i].subsetplot = false;\n    }\n}\n\nfunction showLog() {\n    if (logArray.length > 0) {\n        document.getElementById('logdiv').setAttribute(\"style\", \"display:block\");\n        d3.select(\"#collapseLog div.panel-body\").selectAll(\"p\").data(logArray).enter().append(\"p\").text(function (d) {\n            return d;\n        });\n    } else {\n        document.getElementById('logdiv').setAttribute(\"style\", \"display:none\");\n    }\n}\n\nfunction reWriteLog() {\n    d3.select(\"#collapseLog div.panel-body\").selectAll(\"p\").remove();\n    d3.select(\"#collapseLog div.panel-body\").selectAll(\"p\").data(logArray).enter().append(\"p\").text(function (d) {\n        return d;\n    });\n}\n\n// acts as if the user clicked in whitespace. useful when restart() is outside of scope\nfunction fakeClick() {\n    var myws = \"#whitespace\".concat(myspace);\n    // d3 and programmatic events don't mesh well, here's a SO workaround that looks good but uses jquery...\n    jQuery.fn.d3Click = function () {\n        this.each(function (i, e) {\n            var evt = document.createEvent(\"MouseEvents\");\n            evt.initMouseEvent(\"mousedown\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n            e.dispatchEvent(evt);\n        });\n    };\n    $(myws).d3Click();\n\n    d3.select(myws).classed('active', false); // remove active class\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ./Ladda/dist/ladda-themeless.min.css ***!
  \********************************************/
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0xhZGRhL2Rpc3QvbGFkZGEtdGhlbWVsZXNzLm1pbi5jc3M/MWY5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vTGFkZGEvZGlzdC9sYWRkYS10aGVtZWxlc3MubWluLmNzc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!*****************!*\
  !*** ./app.css ***!
  \*****************/
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC5jc3M/N2YyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYXBwLmNzc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 4 */
/* unknown exports provided */
/* all exports used */
/*!***********************************************!*\
  !*** ./bootstrap/css/bootstrap-theme.min.css ***!
  \***********************************************/
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Jvb3RzdHJhcC9jc3MvYm9vdHN0cmFwLXRoZW1lLm1pbi5jc3M/OTBiYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYm9vdHN0cmFwL2Nzcy9ib290c3RyYXAtdGhlbWUubWluLmNzc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 5 */
/* unknown exports provided */
/* all exports used */
/*!******************************!*\
  !*** ./~/mithril/mithril.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(setImmediate, global) {;(function() {\n\"use strict\"\nfunction Vnode(tag, key, attrs0, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs0, children: children, text: text, dom: dom, domSize: undefined, state: undefined, _state: undefined, events: undefined, instance: undefined, skip: false}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node != null && typeof node !== \"object\") return Vnode(\"#\", undefined, undefined, node === false ? \"\" : node, undefined, undefined)\n\treturn node\n}\nVnode.normalizeChildren = function normalizeChildren(children) {\n\tfor (var i = 0; i < children.length; i++) {\n\t\tchildren[i] = Vnode.normalize(children[i])\n\t}\n\treturn children\n}\nvar selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\nvar selectorCache = {}\nvar hasOwn = {}.hasOwnProperty\nfunction compileSelector(selector) {\n\tvar match, tag = \"div\", classes = [], attrs = {}\n\twhile (match = selectorParser.exec(selector)) {\n\t\tvar type = match[1], value = match[2]\n\t\tif (type === \"\" && value !== \"\") tag = value\n\t\telse if (type === \"#\") attrs.id = value\n\t\telse if (type === \".\") classes.push(value)\n\t\telse if (match[3][0] === \"[\") {\n\t\t\tvar attrValue = match[6]\n\t\t\tif (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")\n\t\t\tif (match[4] === \"class\") classes.push(attrValue)\n\t\t\telse attrs[match[4]] = attrValue || true\n\t\t}\n\t}\n\tif (classes.length > 0) attrs.className = classes.join(\" \")\n\treturn selectorCache[selector] = {tag: tag, attrs: attrs}\n}\nfunction execSelector(state, attrs, children) {\n\tvar hasAttrs = false, childList, text\n\tvar className = attrs.className || attrs.class\n\tfor (var key in state.attrs) {\n\t\tif (hasOwn.call(state.attrs, key)) {\n\t\t\tattrs[key] = state.attrs[key]\n\t\t}\n\t}\n\tif (className !== undefined) {\n\t\tif (attrs.class !== undefined) {\n\t\t\tattrs.class = undefined\n\t\t\tattrs.className = className\n\t\t}\n\t\tif (state.attrs.className != null) {\n\t\t\tattrs.className = state.attrs.className + \" \" + className\n\t\t}\n\t}\n\tfor (var key in attrs) {\n\t\tif (hasOwn.call(attrs, key) && key !== \"key\") {\n\t\t\thasAttrs = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif (Array.isArray(children) && children.length === 1 && children[0] != null && children[0].tag === \"#\") {\n\t\ttext = children[0].children\n\t} else {\n\t\tchildList = children\n\t}\n\treturn Vnode(state.tag, attrs.key, hasAttrs ? attrs : undefined, childList, text)\n}\nfunction hyperscript(selector) {\n\t// Because sloppy mode sucks\n\tvar attrs = arguments[1], start = 2, children\n\tif (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") {\n\t\tthrow Error(\"The selector must be either a string or a component.\");\n\t}\n\tif (typeof selector === \"string\") {\n\t\tvar cached = selectorCache[selector] || compileSelector(selector)\n\t}\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = 1\n\t}\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\tvar normalized = Vnode.normalizeChildren(children)\n\tif (typeof selector === \"string\") {\n\t\treturn execSelector(cached, attrs, normalized)\n\t} else {\n\t\treturn Vnode(selector, attrs.key, attrs, normalized)\n\t}\n}\nhyperscript.trust = function(html) {\n\tif (html == null) html = \"\"\n\treturn Vnode(\"<\", undefined, undefined, html, undefined, undefined)\n}\nhyperscript.fragment = function(attrs1, children) {\n\treturn Vnode(\"[\", attrs1.key, attrs1, Vnode.normalizeChildren(children), undefined, undefined)\n}\nvar m = hyperscript\n/** @constructor */\nvar PromisePolyfill = function(executor) {\n\tif (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with `new`\")\n\tif (typeof executor !== \"function\") throw new TypeError(\"executor must be a function\")\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\n\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\tfunction handler(list, shouldAbsorb) {\n\t\treturn function execute(value) {\n\t\t\tvar then\n\t\t\ttry {\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\n\t\t\t\t\tif (value === self) throw new TypeError(\"Promise can't be resolved w/ itself\")\n\t\t\t\t\texecuteOnce(then.bind(value))\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallAsync(function() {\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\n\t\t\t\t\t\tinstance.state = shouldAbsorb\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\trejectCurrent(e)\n\t\t\t}\n\t\t}\n\t}\n\tfunction executeOnce(then) {\n\t\tvar runs = 0\n\t\tfunction run(fn) {\n\t\t\treturn function(value) {\n\t\t\t\tif (runs++ > 0) return\n\t\t\t\tfn(value)\n\t\t\t}\n\t\t}\n\t\tvar onerror = run(rejectCurrent)\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\n\t}\n\texecuteOnce(executor)\n}\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\n\tvar self = this, instance = self._instance\n\tfunction handle(callback, list, next, state) {\n\t\tlist.push(function(value) {\n\t\t\tif (typeof callback !== \"function\") next(value)\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\n\t\t})\n\t\tif (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\n\t}\n\tvar resolveNext, rejectNext\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\n\treturn promise\n}\nPromisePolyfill.prototype.catch = function(onRejection) {\n\treturn this.then(null, onRejection)\n}\nPromisePolyfill.resolve = function(value) {\n\tif (value instanceof PromisePolyfill) return value\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\n}\nPromisePolyfill.reject = function(value) {\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\n}\nPromisePolyfill.all = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tvar total = list.length, count = 0, values = []\n\t\tif (list.length === 0) resolve([])\n\t\telse for (var i = 0; i < list.length; i++) {\n\t\t\t(function(i) {\n\t\t\t\tfunction consume(value) {\n\t\t\t\t\tcount++\n\t\t\t\t\tvalues[i] = value\n\t\t\t\t\tif (count === total) resolve(values)\n\t\t\t\t}\n\t\t\t\tif (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\n\t\t\t\t\tlist[i].then(consume, reject)\n\t\t\t\t}\n\t\t\t\telse consume(list[i])\n\t\t\t})(i)\n\t\t}\n\t})\n}\nPromisePolyfill.race = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlist[i].then(resolve, reject)\n\t\t}\n\t})\n}\nif (typeof window !== \"undefined\") {\n\tif (typeof window.Promise === \"undefined\") window.Promise = PromisePolyfill\n\tvar PromisePolyfill = window.Promise\n} else if (typeof global !== \"undefined\") {\n\tif (typeof global.Promise === \"undefined\") global.Promise = PromisePolyfill\n\tvar PromisePolyfill = global.Promise\n} else {\n}\nvar buildQueryString = function(object) {\n\tif (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\"\n\tvar args = []\n\tfor (var key0 in object) {\n\t\tdestructure(key0, object[key0])\n\t}\n\treturn args.join(\"&\")\n\tfunction destructure(key0, value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tdestructure(key0 + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse if (Object.prototype.toString.call(value) === \"[object Object]\") {\n\t\t\tfor (var i in value) {\n\t\t\t\tdestructure(key0 + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse args.push(encodeURIComponent(key0) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"))\n\t}\n}\nvar FILE_PROTOCOL_REGEX = new RegExp(\"^file://\", \"i\")\nvar _8 = function($window, Promise) {\n\tvar callbackCount = 0\n\tvar oncompletion\n\tfunction setCompletionCallback(callback) {oncompletion = callback}\n\tfunction finalizer() {\n\t\tvar count = 0\n\t\tfunction complete() {if (--count === 0 && typeof oncompletion === \"function\") oncompletion()}\n\t\treturn function finalize(promise0) {\n\t\t\tvar then0 = promise0.then\n\t\t\tpromise0.then = function() {\n\t\t\t\tcount++\n\t\t\t\tvar next = then0.apply(promise0, arguments)\n\t\t\t\tnext.then(complete, function(e) {\n\t\t\t\t\tcomplete()\n\t\t\t\t\tif (count === 0) throw e\n\t\t\t\t})\n\t\t\t\treturn finalize(next)\n\t\t\t}\n\t\t\treturn promise0\n\t\t}\n\t}\n\tfunction normalize(args, extra) {\n\t\tif (typeof args === \"string\") {\n\t\t\tvar url = args\n\t\t\targs = extra || {}\n\t\t\tif (args.url == null) args.url = url\n\t\t}\n\t\treturn args\n\t}\n\tfunction request(args, extra) {\n\t\tvar finalize = finalizer()\n\t\targs = normalize(args, extra)\n\t\tvar promise0 = new Promise(function(resolve, reject) {\n\t\t\tif (args.method == null) args.method = \"GET\"\n\t\t\targs.method = args.method.toUpperCase()\n\t\t\tvar useBody = (args.method === \"GET\" || args.method === \"TRACE\") ? false : (typeof args.useBody === \"boolean\" ? args.useBody : true)\n\t\t\tif (typeof args.serialize !== \"function\") args.serialize = typeof FormData !== \"undefined\" && args.data instanceof FormData ? function(value) {return value} : JSON.stringify\n\t\t\tif (typeof args.deserialize !== \"function\") args.deserialize = deserialize\n\t\t\tif (typeof args.extract !== \"function\") args.extract = extract\n\t\t\targs.url = interpolate(args.url, args.data)\n\t\t\tif (useBody) args.data = args.serialize(args.data)\n\t\t\telse args.url = assemble(args.url, args.data)\n\t\t\tvar xhr = new $window.XMLHttpRequest(),\n\t\t\t\taborted = false,\n\t\t\t\t_abort = xhr.abort\n\t\t\txhr.abort = function abort() {\n\t\t\t\taborted = true\n\t\t\t\t_abort.call(xhr)\n\t\t\t}\n\t\t\txhr.open(args.method, args.url, typeof args.async === \"boolean\" ? args.async : true, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined)\n\t\t\tif (args.serialize === JSON.stringify && useBody) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t\t}\n\t\t\tif (args.deserialize === deserialize) {\n\t\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\n\t\t\t}\n\t\t\tif (args.withCredentials) xhr.withCredentials = args.withCredentials\n\t\t\tfor (var key in args.headers) if ({}.hasOwnProperty.call(args.headers, key)) {\n\t\t\t\txhr.setRequestHeader(key, args.headers[key])\n\t\t\t}\n\t\t\tif (typeof args.config === \"function\") xhr = args.config(xhr, args) || xhr\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\t// Don't throw errors on xhr.abort().\n\t\t\t\tif(aborted) return\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar response = (args.extract !== extract) ? args.extract(xhr, args) : args.deserialize(args.extract(xhr, args))\n\t\t\t\t\t\tif ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304 || FILE_PROTOCOL_REGEX.test(args.url)) {\n\t\t\t\t\t\t\tresolve(cast(args.type, response))\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar error = new Error(xhr.responseText)\n\t\t\t\t\t\t\tfor (var key in response) error[key] = response[key]\n\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\treject(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (useBody && (args.data != null)) xhr.send(args.data)\n\t\t\telse xhr.send()\n\t\t})\n\t\treturn args.background === true ? promise0 : finalize(promise0)\n\t}\n\tfunction jsonp(args, extra) {\n\t\tvar finalize = finalizer()\n\t\targs = normalize(args, extra)\n\t\tvar promise0 = new Promise(function(resolve, reject) {\n\t\t\tvar callbackName = args.callbackName || \"_mithril_\" + Math.round(Math.random() * 1e16) + \"_\" + callbackCount++\n\t\t\tvar script = $window.document.createElement(\"script\")\n\t\t\t$window[callbackName] = function(data) {\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\tresolve(cast(args.type, data))\n\t\t\t\tdelete $window[callbackName]\n\t\t\t}\n\t\t\tscript.onerror = function() {\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\treject(new Error(\"JSONP request failed\"))\n\t\t\t\tdelete $window[callbackName]\n\t\t\t}\n\t\t\tif (args.data == null) args.data = {}\n\t\t\targs.url = interpolate(args.url, args.data)\n\t\t\targs.data[args.callbackKey || \"callback\"] = callbackName\n\t\t\tscript.src = assemble(args.url, args.data)\n\t\t\t$window.document.documentElement.appendChild(script)\n\t\t})\n\t\treturn args.background === true? promise0 : finalize(promise0)\n\t}\n\tfunction interpolate(url, data) {\n\t\tif (data == null) return url\n\t\tvar tokens = url.match(/:[^\\/]+/gi) || []\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar key = tokens[i].slice(1)\n\t\t\tif (data[key] != null) {\n\t\t\t\turl = url.replace(tokens[i], data[key])\n\t\t\t}\n\t\t}\n\t\treturn url\n\t}\n\tfunction assemble(url, data) {\n\t\tvar querystring = buildQueryString(data)\n\t\tif (querystring !== \"\") {\n\t\t\tvar prefix = url.indexOf(\"?\") < 0 ? \"?\" : \"&\"\n\t\t\turl += prefix + querystring\n\t\t}\n\t\treturn url\n\t}\n\tfunction deserialize(data) {\n\t\ttry {return data !== \"\" ? JSON.parse(data) : null}\n\t\tcatch (e) {throw new Error(data)}\n\t}\n\tfunction extract(xhr) {return xhr.responseText}\n\tfunction cast(type0, data) {\n\t\tif (typeof type0 === \"function\") {\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tdata[i] = new type0(data[i])\n\t\t\t\t}\n\t\t\t}\n\t\t\telse return new type0(data)\n\t\t}\n\t\treturn data\n\t}\n\treturn {request: request, jsonp: jsonp, setCompletionCallback: setCompletionCallback}\n}\nvar requestService = _8(window, PromisePolyfill)\nvar coreRenderer = function($window) {\n\tvar $doc = $window.document\n\tvar $emptyFragment = $doc.createDocumentFragment()\n\tvar onevent\n\tfunction setEventCallback(callback) {return onevent = callback}\n\t//create\n\tfunction createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t}\n\tfunction createNode(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tif (typeof tag === \"string\") {\n\t\t\tvnode.state = {}\n\t\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tswitch (tag) {\n\t\t\t\tcase \"#\": return createText(parent, vnode, nextSibling)\n\t\t\t\tcase \"<\": return createHTML(parent, vnode, nextSibling)\n\t\t\t\tcase \"[\": return createFragment(parent, vnode, hooks, ns, nextSibling)\n\t\t\t\tdefault: return createElement(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t\telse return createComponent(parent, vnode, hooks, ns, nextSibling)\n\t}\n\tfunction createText(parent, vnode, nextSibling) {\n\t\tvnode.dom = $doc.createTextNode(vnode.children)\n\t\tinsertNode(parent, vnode.dom, nextSibling)\n\t\treturn vnode.dom\n\t}\n\tfunction createHTML(parent, vnode, nextSibling) {\n\t\tvar match1 = vnode.children.match(/^\\s*?<(\\w+)/im) || []\n\t\tvar parent1 = {caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\"}[match1[1]] || \"div\"\n\t\tvar temp = $doc.createElement(parent1)\n\t\ttemp.innerHTML = vnode.children\n\t\tvnode.dom = temp.firstChild\n\t\tvnode.domSize = temp.childNodes.length\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tvar child\n\t\twhile (child = temp.firstChild) {\n\t\t\tfragment.appendChild(child)\n\t\t}\n\t\tinsertNode(parent, fragment, nextSibling)\n\t\treturn fragment\n\t}\n\tfunction createFragment(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tif (vnode.children != null) {\n\t\t\tvar children = vnode.children\n\t\t\tcreateNodes(fragment, children, 0, children.length, hooks, null, ns)\n\t\t}\n\t\tvnode.dom = fragment.firstChild\n\t\tvnode.domSize = fragment.childNodes.length\n\t\tinsertNode(parent, fragment, nextSibling)\n\t\treturn fragment\n\t}\n\tfunction createElement(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tswitch (vnode.tag) {\n\t\t\tcase \"svg\": ns = \"http://www.w3.org/2000/svg\"; break\n\t\t\tcase \"math\": ns = \"http://www.w3.org/1998/Math/MathML\"; break\n\t\t}\n\t\tvar attrs2 = vnode.attrs\n\t\tvar is = attrs2 && attrs2.is\n\t\tvar element = ns ?\n\t\t\tis ? $doc.createElementNS(ns, tag, {is: is}) : $doc.createElementNS(ns, tag) :\n\t\t\tis ? $doc.createElement(tag, {is: is}) : $doc.createElement(tag)\n\t\tvnode.dom = element\n\t\tif (attrs2 != null) {\n\t\t\tsetAttrs(vnode, attrs2, ns)\n\t\t}\n\t\tinsertNode(parent, element, nextSibling)\n\t\tif (vnode.attrs != null && vnode.attrs.contenteditable != null) {\n\t\t\tsetContentEditable(vnode)\n\t\t}\n\t\telse {\n\t\t\tif (vnode.text != null) {\n\t\t\t\tif (vnode.text !== \"\") element.textContent = vnode.text\n\t\t\t\telse vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\t}\n\t\t\tif (vnode.children != null) {\n\t\t\t\tvar children = vnode.children\n\t\t\t\tcreateNodes(element, children, 0, children.length, hooks, null, ns)\n\t\t\t\tsetLateAttrs(vnode)\n\t\t\t}\n\t\t}\n\t\treturn element\n\t}\n\tfunction initComponent(vnode, hooks) {\n\t\tvar sentinel\n\t\tif (typeof vnode.tag.view === \"function\") {\n\t\t\tvnode.state = Object.create(vnode.tag)\n\t\t\tsentinel = vnode.state.view\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return $emptyFragment\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t} else {\n\t\t\tvnode.state = void 0\n\t\t\tsentinel = vnode.tag\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return $emptyFragment\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t\tvnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\") ? new vnode.tag(vnode) : vnode.tag(vnode)\n\t\t}\n\t\tvnode._state = vnode.state\n\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\tinitLifecycle(vnode._state, vnode, hooks)\n\t\tvnode.instance = Vnode.normalize(vnode._state.view.call(vnode.state, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tsentinel.$$reentrantLock$$ = null\n\t}\n\tfunction createComponent(parent, vnode, hooks, ns, nextSibling) {\n\t\tinitComponent(vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tvar element = createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\n\t\t\tinsertNode(parent, element, nextSibling)\n\t\t\treturn element\n\t\t}\n\t\telse {\n\t\t\tvnode.domSize = 0\n\t\t\treturn $emptyFragment\n\t\t}\n\t}\n\t//update\n\tfunction updateNodes(parent, old, vnodes, recycling, hooks, nextSibling, ns) {\n\t\tif (old === vnodes || old == null && vnodes == null) return\n\t\telse if (old == null) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, undefined)\n\t\telse if (vnodes == null) removeNodes(old, 0, old.length, vnodes)\n\t\telse {\n\t\t\tif (old.length === vnodes.length) {\n\t\t\t\tvar isUnkeyed = false\n\t\t\t\tfor (var i = 0; i < vnodes.length; i++) {\n\t\t\t\t\tif (vnodes[i] != null && old[i] != null) {\n\t\t\t\t\t\tisUnkeyed = vnodes[i].key == null && old[i].key == null\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isUnkeyed) {\n\t\t\t\t\tfor (var i = 0; i < old.length; i++) {\n\t\t\t\t\t\tif (old[i] === vnodes[i]) continue\n\t\t\t\t\t\telse if (old[i] == null && vnodes[i] != null) createNode(parent, vnodes[i], hooks, ns, getNextSibling(old, i + 1, nextSibling))\n\t\t\t\t\t\telse if (vnodes[i] == null) removeNodes(old, i, i + 1, vnodes)\n\t\t\t\t\t\telse updateNode(parent, old[i], vnodes[i], hooks, getNextSibling(old, i + 1, nextSibling), recycling, ns)\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\trecycling = recycling || isRecyclable(old, vnodes)\n\t\t\tif (recycling) {\n\t\t\t\tvar pool = old.pool\n\t\t\t\told = old.concat(old.pool)\n\t\t\t}\n\t\t\tvar oldStart = 0, start = 0, oldEnd = old.length - 1, end = vnodes.length - 1, map\n\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\tvar o = old[oldStart], v = vnodes[start]\n\t\t\t\tif (o === v && !recycling) oldStart++, start++\n\t\t\t\telse if (o == null) oldStart++\n\t\t\t\telse if (v == null) start++\n\t\t\t\telse if (o.key === v.key) {\n\t\t\t\t\tvar shouldRecycle = (pool != null && oldStart >= old.length - pool.length) || ((pool == null) && recycling)\n\t\t\t\t\toldStart++, start++\n\t\t\t\t\tupdateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), shouldRecycle, ns)\n\t\t\t\t\tif (recycling && o.tag === v.tag) insertNode(parent, toFragment(o), nextSibling)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar o = old[oldEnd]\n\t\t\t\t\tif (o === v && !recycling) oldEnd--, start++\n\t\t\t\t\telse if (o == null) oldEnd--\n\t\t\t\t\telse if (v == null) start++\n\t\t\t\t\telse if (o.key === v.key) {\n\t\t\t\t\t\tvar shouldRecycle = (pool != null && oldEnd >= old.length - pool.length) || ((pool == null) && recycling)\n\t\t\t\t\t\tupdateNode(parent, o, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), shouldRecycle, ns)\n\t\t\t\t\t\tif (recycling || start < end) insertNode(parent, toFragment(o), getNextSibling(old, oldStart, nextSibling))\n\t\t\t\t\t\toldEnd--, start++\n\t\t\t\t\t}\n\t\t\t\t\telse break\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\tvar o = old[oldEnd], v = vnodes[end]\n\t\t\t\tif (o === v && !recycling) oldEnd--, end--\n\t\t\t\telse if (o == null) oldEnd--\n\t\t\t\telse if (v == null) end--\n\t\t\t\telse if (o.key === v.key) {\n\t\t\t\t\tvar shouldRecycle = (pool != null && oldEnd >= old.length - pool.length) || ((pool == null) && recycling)\n\t\t\t\t\tupdateNode(parent, o, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), shouldRecycle, ns)\n\t\t\t\t\tif (recycling && o.tag === v.tag) insertNode(parent, toFragment(o), nextSibling)\n\t\t\t\t\tif (o.dom != null) nextSibling = o.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!map) map = getKeyMap(old, oldEnd)\n\t\t\t\t\tif (v != null) {\n\t\t\t\t\t\tvar oldIndex = map[v.key]\n\t\t\t\t\t\tif (oldIndex != null) {\n\t\t\t\t\t\t\tvar movable = old[oldIndex]\n\t\t\t\t\t\t\tvar shouldRecycle = (pool != null && oldIndex >= old.length - pool.length) || ((pool == null) && recycling)\n\t\t\t\t\t\t\tupdateNode(parent, movable, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), recycling, ns)\n\t\t\t\t\t\t\tinsertNode(parent, toFragment(movable), nextSibling)\n\t\t\t\t\t\t\told[oldIndex].skip = true\n\t\t\t\t\t\t\tif (movable.dom != null) nextSibling = movable.dom\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar dom = createNode(parent, v, hooks, undefined, nextSibling)\n\t\t\t\t\t\t\tnextSibling = dom\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tend--\n\t\t\t\t}\n\t\t\t\tif (end < start) break\n\t\t\t}\n\t\t\tcreateNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\tremoveNodes(old, oldStart, oldEnd + 1, vnodes)\n\t\t}\n\t}\n\tfunction updateNode(parent, old, vnode, hooks, nextSibling, recycling, ns) {\n\t\tvar oldTag = old.tag, tag = vnode.tag\n\t\tif (oldTag === tag) {\n\t\t\tvnode.state = old.state\n\t\t\tvnode._state = old._state\n\t\t\tvnode.events = old.events\n\t\t\tif (!recycling && shouldNotUpdate(vnode, old)) return\n\t\t\tif (typeof oldTag === \"string\") {\n\t\t\t\tif (vnode.attrs != null) {\n\t\t\t\t\tif (recycling) {\n\t\t\t\t\t\tvnode.state = {}\n\t\t\t\t\t\tinitLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t\t}\n\t\t\t\t\telse updateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t}\n\t\t\t\tswitch (oldTag) {\n\t\t\t\t\tcase \"#\": updateText(old, vnode); break\n\t\t\t\t\tcase \"<\": updateHTML(parent, old, vnode, nextSibling); break\n\t\t\t\t\tcase \"[\": updateFragment(parent, old, vnode, recycling, hooks, nextSibling, ns); break\n\t\t\t\t\tdefault: updateElement(old, vnode, recycling, hooks, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse updateComponent(parent, old, vnode, hooks, nextSibling, recycling, ns)\n\t\t}\n\t\telse {\n\t\t\tremoveNode(old, null)\n\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t}\n\t}\n\tfunction updateText(old, vnode) {\n\t\tif (old.children.toString() !== vnode.children.toString()) {\n\t\t\told.dom.nodeValue = vnode.children\n\t\t}\n\t\tvnode.dom = old.dom\n\t}\n\tfunction updateHTML(parent, old, vnode, nextSibling) {\n\t\tif (old.children !== vnode.children) {\n\t\t\ttoFragment(old)\n\t\t\tcreateHTML(parent, vnode, nextSibling)\n\t\t}\n\t\telse vnode.dom = old.dom, vnode.domSize = old.domSize\n\t}\n\tfunction updateFragment(parent, old, vnode, recycling, hooks, nextSibling, ns) {\n\t\tupdateNodes(parent, old.children, vnode.children, recycling, hooks, nextSibling, ns)\n\t\tvar domSize = 0, children = vnode.children\n\t\tvnode.dom = null\n\t\tif (children != null) {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i]\n\t\t\t\tif (child != null && child.dom != null) {\n\t\t\t\t\tif (vnode.dom == null) vnode.dom = child.dom\n\t\t\t\t\tdomSize += child.domSize || 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (domSize !== 1) vnode.domSize = domSize\n\t\t}\n\t}\n\tfunction updateElement(old, vnode, recycling, hooks, ns) {\n\t\tvar element = vnode.dom = old.dom\n\t\tswitch (vnode.tag) {\n\t\t\tcase \"svg\": ns = \"http://www.w3.org/2000/svg\"; break\n\t\t\tcase \"math\": ns = \"http://www.w3.org/1998/Math/MathML\"; break\n\t\t}\n\t\tif (vnode.tag === \"textarea\") {\n\t\t\tif (vnode.attrs == null) vnode.attrs = {}\n\t\t\tif (vnode.text != null) {\n\t\t\t\tvnode.attrs.value = vnode.text //FIXME handle0 multiple children\n\t\t\t\tvnode.text = undefined\n\t\t\t}\n\t\t}\n\t\tupdateAttrs(vnode, old.attrs, vnode.attrs, ns)\n\t\tif (vnode.attrs != null && vnode.attrs.contenteditable != null) {\n\t\t\tsetContentEditable(vnode)\n\t\t}\n\t\telse if (old.text != null && vnode.text != null && vnode.text !== \"\") {\n\t\t\tif (old.text.toString() !== vnode.text.toString()) old.dom.firstChild.nodeValue = vnode.text\n\t\t}\n\t\telse {\n\t\t\tif (old.text != null) old.children = [Vnode(\"#\", undefined, undefined, old.text, undefined, old.dom.firstChild)]\n\t\t\tif (vnode.text != null) vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\tupdateNodes(element, old.children, vnode.children, recycling, hooks, null, ns)\n\t\t}\n\t}\n\tfunction updateComponent(parent, old, vnode, hooks, nextSibling, recycling, ns) {\n\t\tif (recycling) {\n\t\t\tinitComponent(vnode, hooks)\n\t\t} else {\n\t\t\tvnode.instance = Vnode.normalize(vnode._state.view.call(vnode.state, vnode))\n\t\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\t\tif (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tupdateLifecycle(vnode._state, vnode, hooks)\n\t\t}\n\t\tif (vnode.instance != null) {\n\t\t\tif (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\telse updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, recycling, ns)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.instance.domSize\n\t\t}\n\t\telse if (old.instance != null) {\n\t\t\tremoveNode(old.instance, null)\n\t\t\tvnode.dom = undefined\n\t\t\tvnode.domSize = 0\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t}\n\t}\n\tfunction isRecyclable(old, vnodes) {\n\t\tif (old.pool != null && Math.abs(old.pool.length - vnodes.length) <= Math.abs(old.length - vnodes.length)) {\n\t\t\tvar oldChildrenLength = old[0] && old[0].children && old[0].children.length || 0\n\t\t\tvar poolChildrenLength = old.pool[0] && old.pool[0].children && old.pool[0].children.length || 0\n\t\t\tvar vnodesChildrenLength = vnodes[0] && vnodes[0].children && vnodes[0].children.length || 0\n\t\t\tif (Math.abs(poolChildrenLength - vnodesChildrenLength) <= Math.abs(oldChildrenLength - vnodesChildrenLength)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\tfunction getKeyMap(vnodes, end) {\n\t\tvar map = {}, i = 0\n\t\tfor (var i = 0; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tvar key2 = vnode.key\n\t\t\t\tif (key2 != null) map[key2] = i\n\t\t\t}\n\t\t}\n\t\treturn map\n\t}\n\tfunction toFragment(vnode) {\n\t\tvar count0 = vnode.domSize\n\t\tif (count0 != null || vnode.dom == null) {\n\t\t\tvar fragment = $doc.createDocumentFragment()\n\t\t\tif (count0 > 0) {\n\t\t\t\tvar dom = vnode.dom\n\t\t\t\twhile (--count0) fragment.appendChild(dom.nextSibling)\n\t\t\t\tfragment.insertBefore(dom, fragment.firstChild)\n\t\t\t}\n\t\t\treturn fragment\n\t\t}\n\t\telse return vnode.dom\n\t}\n\tfunction getNextSibling(vnodes, i, nextSibling) {\n\t\tfor (; i < vnodes.length; i++) {\n\t\t\tif (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\n\t\t}\n\t\treturn nextSibling\n\t}\n\tfunction insertNode(parent, dom, nextSibling) {\n\t\tif (nextSibling && nextSibling.parentNode) parent.insertBefore(dom, nextSibling)\n\t\telse parent.appendChild(dom)\n\t}\n\tfunction setContentEditable(vnode) {\n\t\tvar children = vnode.children\n\t\tif (children != null && children.length === 1 && children[0].tag === \"<\") {\n\t\t\tvar content = children[0].children\n\t\t\tif (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\n\t\t}\n\t\telse if (vnode.text != null || children != null && children.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted\")\n\t}\n\t//remove\n\tfunction removeNodes(vnodes, start, end, context) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tif (vnode.skip) vnode.skip = false\n\t\t\t\telse removeNode(vnode, context)\n\t\t\t}\n\t\t}\n\t}\n\tfunction removeNode(vnode, context) {\n\t\tvar expected = 1, called = 0\n\t\tif (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\n\t\t\tvar result = vnode.attrs.onbeforeremove.call(vnode.state, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\texpected++\n\t\t\t\tresult.then(continuation, continuation)\n\t\t\t}\n\t\t}\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode._state.onbeforeremove === \"function\") {\n\t\t\tvar result = vnode._state.onbeforeremove.call(vnode.state, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\texpected++\n\t\t\t\tresult.then(continuation, continuation)\n\t\t\t}\n\t\t}\n\t\tcontinuation()\n\t\tfunction continuation() {\n\t\t\tif (++called === expected) {\n\t\t\t\tonremove(vnode)\n\t\t\t\tif (vnode.dom) {\n\t\t\t\t\tvar count0 = vnode.domSize || 1\n\t\t\t\t\tif (count0 > 1) {\n\t\t\t\t\t\tvar dom = vnode.dom\n\t\t\t\t\t\twhile (--count0) {\n\t\t\t\t\t\t\tremoveNodeFromDOM(dom.nextSibling)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tremoveNodeFromDOM(vnode.dom)\n\t\t\t\t\tif (context != null && vnode.domSize == null && !hasIntegrationMethods(vnode.attrs) && typeof vnode.tag === \"string\") { //TODO test custom elements\n\t\t\t\t\t\tif (!context.pool) context.pool = [vnode]\n\t\t\t\t\t\telse context.pool.push(vnode)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction removeNodeFromDOM(node) {\n\t\tvar parent = node.parentNode\n\t\tif (parent != null) parent.removeChild(node)\n\t}\n\tfunction onremove(vnode) {\n\t\tif (vnode.attrs && typeof vnode.attrs.onremove === \"function\") vnode.attrs.onremove.call(vnode.state, vnode)\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode._state.onremove === \"function\") vnode._state.onremove.call(vnode.state, vnode)\n\t\tif (vnode.instance != null) onremove(vnode.instance)\n\t\telse {\n\t\t\tvar children = vnode.children\n\t\t\tif (Array.isArray(children)) {\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar child = children[i]\n\t\t\t\t\tif (child != null) onremove(child)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//attrs2\n\tfunction setAttrs(vnode, attrs2, ns) {\n\t\tfor (var key2 in attrs2) {\n\t\t\tsetAttr(vnode, key2, null, attrs2[key2], ns)\n\t\t}\n\t}\n\tfunction setAttr(vnode, key2, old, value, ns) {\n\t\tvar element = vnode.dom\n\t\tif (key2 === \"key\" || key2 === \"is\" || (old === value && !isFormAttribute(vnode, key2)) && typeof value !== \"object\" || typeof value === \"undefined\" || isLifecycleMethod(key2)) return\n\t\tvar nsLastIndex = key2.indexOf(\":\")\n\t\tif (nsLastIndex > -1 && key2.substr(0, nsLastIndex) === \"xlink\") {\n\t\t\telement.setAttributeNS(\"http://www.w3.org/1999/xlink\", key2.slice(nsLastIndex + 1), value)\n\t\t}\n\t\telse if (key2[0] === \"o\" && key2[1] === \"n\" && typeof value === \"function\") updateEvent(vnode, key2, value)\n\t\telse if (key2 === \"style\") updateStyle(element, old, value)\n\t\telse if (key2 in element && !isAttribute(key2) && ns === undefined && !isCustomElement(vnode)) {\n\t\t\t//setting input[value] to same value by typing on focused element moves cursor to end in Chrome\n\t\t\tif (vnode.tag === \"input\" && key2 === \"value\" && vnode.dom.value == value && vnode.dom === $doc.activeElement) return\n\t\t\t//setting select[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\tif (vnode.tag === \"select\" && key2 === \"value\" && vnode.dom.value == value && vnode.dom === $doc.activeElement) return\n\t\t\t//setting option[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\tif (vnode.tag === \"option\" && key2 === \"value\" && vnode.dom.value == value) return\n\t\t\t// If you assign an input type1 that is not supported by IE 11 with an assignment expression, an error0 will occur.\n\t\t\tif (vnode.tag === \"input\" && key2 === \"type\") {\n\t\t\t\telement.setAttribute(key2, value)\n\t\t\t\treturn\n\t\t\t}\n\t\t\telement[key2] = value\n\t\t}\n\t\telse {\n\t\t\tif (typeof value === \"boolean\") {\n\t\t\t\tif (value) element.setAttribute(key2, \"\")\n\t\t\t\telse element.removeAttribute(key2)\n\t\t\t}\n\t\t\telse element.setAttribute(key2 === \"className\" ? \"class\" : key2, value)\n\t\t}\n\t}\n\tfunction setLateAttrs(vnode) {\n\t\tvar attrs2 = vnode.attrs\n\t\tif (vnode.tag === \"select\" && attrs2 != null) {\n\t\t\tif (\"value\" in attrs2) setAttr(vnode, \"value\", null, attrs2.value, undefined)\n\t\t\tif (\"selectedIndex\" in attrs2) setAttr(vnode, \"selectedIndex\", null, attrs2.selectedIndex, undefined)\n\t\t}\n\t}\n\tfunction updateAttrs(vnode, old, attrs2, ns) {\n\t\tif (attrs2 != null) {\n\t\t\tfor (var key2 in attrs2) {\n\t\t\t\tsetAttr(vnode, key2, old && old[key2], attrs2[key2], ns)\n\t\t\t}\n\t\t}\n\t\tif (old != null) {\n\t\t\tfor (var key2 in old) {\n\t\t\t\tif (attrs2 == null || !(key2 in attrs2)) {\n\t\t\t\t\tif (key2 === \"className\") key2 = \"class\"\n\t\t\t\t\tif (key2[0] === \"o\" && key2[1] === \"n\" && !isLifecycleMethod(key2)) updateEvent(vnode, key2, undefined)\n\t\t\t\t\telse if (key2 !== \"key\") vnode.dom.removeAttribute(key2)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction isFormAttribute(vnode, attr) {\n\t\treturn attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === $doc.activeElement\n\t}\n\tfunction isLifecycleMethod(attr) {\n\t\treturn attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\"\n\t}\n\tfunction isAttribute(attr) {\n\t\treturn attr === \"href\" || attr === \"list\" || attr === \"form\" || attr === \"width\" || attr === \"height\"// || attr === \"type\"\n\t}\n\tfunction isCustomElement(vnode){\n\t\treturn vnode.attrs.is || vnode.tag.indexOf(\"-\") > -1\n\t}\n\tfunction hasIntegrationMethods(source) {\n\t\treturn source != null && (source.oncreate || source.onupdate || source.onbeforeremove || source.onremove)\n\t}\n\t//style\n\tfunction updateStyle(element, old, style) {\n\t\tif (old === style) element.style.cssText = \"\", old = null\n\t\tif (style == null) element.style.cssText = \"\"\n\t\telse if (typeof style === \"string\") element.style.cssText = style\n\t\telse {\n\t\t\tif (typeof old === \"string\") element.style.cssText = \"\"\n\t\t\tfor (var key2 in style) {\n\t\t\t\telement.style[key2] = style[key2]\n\t\t\t}\n\t\t\tif (old != null && typeof old !== \"string\") {\n\t\t\t\tfor (var key2 in old) {\n\t\t\t\t\tif (!(key2 in style)) element.style[key2] = \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//event\n\tfunction updateEvent(vnode, key2, value) {\n\t\tvar element = vnode.dom\n\t\tvar callback = typeof onevent !== \"function\" ? value : function(e) {\n\t\t\tvar result = value.call(element, e)\n\t\t\tonevent.call(element, e)\n\t\t\treturn result\n\t\t}\n\t\tif (key2 in element) element[key2] = typeof value === \"function\" ? callback : null\n\t\telse {\n\t\t\tvar eventName = key2.slice(2)\n\t\t\tif (vnode.events === undefined) vnode.events = {}\n\t\t\tif (vnode.events[key2] === callback) return\n\t\t\tif (vnode.events[key2] != null) element.removeEventListener(eventName, vnode.events[key2], false)\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tvnode.events[key2] = callback\n\t\t\t\telement.addEventListener(eventName, vnode.events[key2], false)\n\t\t\t}\n\t\t}\n\t}\n\t//lifecycle\n\tfunction initLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.oninit === \"function\") source.oninit.call(vnode.state, vnode)\n\t\tif (typeof source.oncreate === \"function\") hooks.push(source.oncreate.bind(vnode.state, vnode))\n\t}\n\tfunction updateLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.onupdate === \"function\") hooks.push(source.onupdate.bind(vnode.state, vnode))\n\t}\n\tfunction shouldNotUpdate(vnode, old) {\n\t\tvar forceVnodeUpdate, forceComponentUpdate\n\t\tif (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") forceVnodeUpdate = vnode.attrs.onbeforeupdate.call(vnode.state, vnode, old)\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode._state.onbeforeupdate === \"function\") forceComponentUpdate = vnode._state.onbeforeupdate.call(vnode.state, vnode, old)\n\t\tif (!(forceVnodeUpdate === undefined && forceComponentUpdate === undefined) && !forceVnodeUpdate && !forceComponentUpdate) {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t\tvnode.instance = old.instance\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\tfunction render(dom, vnodes) {\n\t\tif (!dom) throw new Error(\"Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.\")\n\t\tvar hooks = []\n\t\tvar active = $doc.activeElement\n\t\t// First time0 rendering into a node clears it out\n\t\tif (dom.vnodes == null) dom.textContent = \"\"\n\t\tif (!Array.isArray(vnodes)) vnodes = [vnodes]\n\t\tupdateNodes(dom, dom.vnodes, Vnode.normalizeChildren(vnodes), false, hooks, null, undefined)\n\t\tdom.vnodes = vnodes\n\t\tfor (var i = 0; i < hooks.length; i++) hooks[i]()\n\t\tif ($doc.activeElement !== active) active.focus()\n\t}\n\treturn {render: render, setEventCallback: setEventCallback}\n}\nfunction throttle(callback) {\n\t//60fps translates to 16.6ms, round it down since setTimeout requires int\n\tvar time = 16\n\tvar last = 0, pending = null\n\tvar timeout = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : setTimeout\n\treturn function() {\n\t\tvar now = Date.now()\n\t\tif (last === 0 || now - last >= time) {\n\t\t\tlast = now\n\t\t\tcallback()\n\t\t}\n\t\telse if (pending === null) {\n\t\t\tpending = timeout(function() {\n\t\t\t\tpending = null\n\t\t\t\tcallback()\n\t\t\t\tlast = Date.now()\n\t\t\t}, time - (now - last))\n\t\t}\n\t}\n}\nvar _11 = function($window) {\n\tvar renderService = coreRenderer($window)\n\trenderService.setEventCallback(function(e) {\n\t\tif (e.redraw !== false) redraw()\n\t})\n\tvar callbacks = []\n\tfunction subscribe(key1, callback) {\n\t\tunsubscribe(key1)\n\t\tcallbacks.push(key1, throttle(callback))\n\t}\n\tfunction unsubscribe(key1) {\n\t\tvar index = callbacks.indexOf(key1)\n\t\tif (index > -1) callbacks.splice(index, 2)\n\t}\n\tfunction redraw() {\n\t\tfor (var i = 1; i < callbacks.length; i += 2) {\n\t\t\tcallbacks[i]()\n\t\t}\n\t}\n\treturn {subscribe: subscribe, unsubscribe: unsubscribe, redraw: redraw, render: renderService.render}\n}\nvar redrawService = _11(window)\nrequestService.setCompletionCallback(redrawService.redraw)\nvar _16 = function(redrawService0) {\n\treturn function(root, component) {\n\t\tif (component === null) {\n\t\t\tredrawService0.render(root, [])\n\t\t\tredrawService0.unsubscribe(root)\n\t\t\treturn\n\t\t}\n\t\t\n\t\tif (component.view == null && typeof component !== \"function\") throw new Error(\"m.mount(element, component) expects a component, not a vnode\")\n\t\t\n\t\tvar run0 = function() {\n\t\t\tredrawService0.render(root, Vnode(component))\n\t\t}\n\t\tredrawService0.subscribe(root, run0)\n\t\tredrawService0.redraw()\n\t}\n}\nm.mount = _16(redrawService)\nvar Promise = PromisePolyfill\nvar parseQueryString = function(string) {\n\tif (string === \"\" || string == null) return {}\n\tif (string.charAt(0) === \"?\") string = string.slice(1)\n\tvar entries = string.split(\"&\"), data0 = {}, counters = {}\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar entry = entries[i].split(\"=\")\n\t\tvar key5 = decodeURIComponent(entry[0])\n\t\tvar value = entry.length === 2 ? decodeURIComponent(entry[1]) : \"\"\n\t\tif (value === \"true\") value = true\n\t\telse if (value === \"false\") value = false\n\t\tvar levels = key5.split(/\\]\\[?|\\[/)\n\t\tvar cursor = data0\n\t\tif (key5.indexOf(\"[\") > -1) levels.pop()\n\t\tfor (var j = 0; j < levels.length; j++) {\n\t\t\tvar level = levels[j], nextLevel = levels[j + 1]\n\t\t\tvar isNumber = nextLevel == \"\" || !isNaN(parseInt(nextLevel, 10))\n\t\t\tvar isValue = j === levels.length - 1\n\t\t\tif (level === \"\") {\n\t\t\t\tvar key5 = levels.slice(0, j).join()\n\t\t\t\tif (counters[key5] == null) counters[key5] = 0\n\t\t\t\tlevel = counters[key5]++\n\t\t\t}\n\t\t\tif (cursor[level] == null) {\n\t\t\t\tcursor[level] = isValue ? value : isNumber ? [] : {}\n\t\t\t}\n\t\t\tcursor = cursor[level]\n\t\t}\n\t}\n\treturn data0\n}\nvar coreRouter = function($window) {\n\tvar supportsPushState = typeof $window.history.pushState === \"function\"\n\tvar callAsync0 = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\tfunction normalize1(fragment0) {\n\t\tvar data = $window.location[fragment0].replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponent)\n\t\tif (fragment0 === \"pathname\" && data[0] !== \"/\") data = \"/\" + data\n\t\treturn data\n\t}\n\tvar asyncId\n\tfunction debounceAsync(callback0) {\n\t\treturn function() {\n\t\t\tif (asyncId != null) return\n\t\t\tasyncId = callAsync0(function() {\n\t\t\t\tasyncId = null\n\t\t\t\tcallback0()\n\t\t\t})\n\t\t}\n\t}\n\tfunction parsePath(path, queryData, hashData) {\n\t\tvar queryIndex = path.indexOf(\"?\")\n\t\tvar hashIndex = path.indexOf(\"#\")\n\t\tvar pathEnd = queryIndex > -1 ? queryIndex : hashIndex > -1 ? hashIndex : path.length\n\t\tif (queryIndex > -1) {\n\t\t\tvar queryEnd = hashIndex > -1 ? hashIndex : path.length\n\t\t\tvar queryParams = parseQueryString(path.slice(queryIndex + 1, queryEnd))\n\t\t\tfor (var key4 in queryParams) queryData[key4] = queryParams[key4]\n\t\t}\n\t\tif (hashIndex > -1) {\n\t\t\tvar hashParams = parseQueryString(path.slice(hashIndex + 1))\n\t\t\tfor (var key4 in hashParams) hashData[key4] = hashParams[key4]\n\t\t}\n\t\treturn path.slice(0, pathEnd)\n\t}\n\tvar router = {prefix: \"#!\"}\n\trouter.getPath = function() {\n\t\tvar type2 = router.prefix.charAt(0)\n\t\tswitch (type2) {\n\t\t\tcase \"#\": return normalize1(\"hash\").slice(router.prefix.length)\n\t\t\tcase \"?\": return normalize1(\"search\").slice(router.prefix.length) + normalize1(\"hash\")\n\t\t\tdefault: return normalize1(\"pathname\").slice(router.prefix.length) + normalize1(\"search\") + normalize1(\"hash\")\n\t\t}\n\t}\n\trouter.setPath = function(path, data, options) {\n\t\tvar queryData = {}, hashData = {}\n\t\tpath = parsePath(path, queryData, hashData)\n\t\tif (data != null) {\n\t\t\tfor (var key4 in data) queryData[key4] = data[key4]\n\t\t\tpath = path.replace(/:([^\\/]+)/g, function(match2, token) {\n\t\t\t\tdelete queryData[token]\n\t\t\t\treturn data[token]\n\t\t\t})\n\t\t}\n\t\tvar query = buildQueryString(queryData)\n\t\tif (query) path += \"?\" + query\n\t\tvar hash = buildQueryString(hashData)\n\t\tif (hash) path += \"#\" + hash\n\t\tif (supportsPushState) {\n\t\t\tvar state = options ? options.state : null\n\t\t\tvar title = options ? options.title : null\n\t\t\t$window.onpopstate()\n\t\t\tif (options && options.replace) $window.history.replaceState(state, title, router.prefix + path)\n\t\t\telse $window.history.pushState(state, title, router.prefix + path)\n\t\t}\n\t\telse $window.location.href = router.prefix + path\n\t}\n\trouter.defineRoutes = function(routes, resolve, reject) {\n\t\tfunction resolveRoute() {\n\t\t\tvar path = router.getPath()\n\t\t\tvar params = {}\n\t\t\tvar pathname = parsePath(path, params, params)\n\t\t\tvar state = $window.history.state\n\t\t\tif (state != null) {\n\t\t\t\tfor (var k in state) params[k] = state[k]\n\t\t\t}\n\t\t\tfor (var route0 in routes) {\n\t\t\t\tvar matcher = new RegExp(\"^\" + route0.replace(/:[^\\/]+?\\.{3}/g, \"(.*?)\").replace(/:[^\\/]+/g, \"([^\\\\/]+)\") + \"\\/?$\")\n\t\t\t\tif (matcher.test(pathname)) {\n\t\t\t\t\tpathname.replace(matcher, function() {\n\t\t\t\t\t\tvar keys = route0.match(/:[^\\/]+/g) || []\n\t\t\t\t\t\tvar values = [].slice.call(arguments, 1, -2)\n\t\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\tparams[keys[i].replace(/:|\\./g, \"\")] = decodeURIComponent(values[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(routes[route0], params, path, route0)\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\treject(path, params)\n\t\t}\n\t\tif (supportsPushState) $window.onpopstate = debounceAsync(resolveRoute)\n\t\telse if (router.prefix.charAt(0) === \"#\") $window.onhashchange = resolveRoute\n\t\tresolveRoute()\n\t}\n\treturn router\n}\nvar _20 = function($window, redrawService0) {\n\tvar routeService = coreRouter($window)\n\tvar identity = function(v) {return v}\n\tvar render1, component, attrs3, currentPath, lastUpdate\n\tvar route = function(root, defaultRoute, routes) {\n\t\tif (root == null) throw new Error(\"Ensure the DOM element that was passed to `m.route` is not undefined\")\n\t\tvar run1 = function() {\n\t\t\tif (render1 != null) redrawService0.render(root, render1(Vnode(component, attrs3.key, attrs3)))\n\t\t}\n\t\tvar bail = function(path) {\n\t\t\tif (path !== defaultRoute) routeService.setPath(defaultRoute, null, {replace: true})\n\t\t\telse throw new Error(\"Could not resolve default route \" + defaultRoute)\n\t\t}\n\t\trouteService.defineRoutes(routes, function(payload, params, path) {\n\t\t\tvar update = lastUpdate = function(routeResolver, comp) {\n\t\t\t\tif (update !== lastUpdate) return\n\t\t\t\tcomponent = comp != null && (typeof comp.view === \"function\" || typeof comp === \"function\")? comp : \"div\"\n\t\t\t\tattrs3 = params, currentPath = path, lastUpdate = null\n\t\t\t\trender1 = (routeResolver.render || identity).bind(routeResolver)\n\t\t\t\trun1()\n\t\t\t}\n\t\t\tif (payload.view || typeof payload === \"function\") update({}, payload)\n\t\t\telse {\n\t\t\t\tif (payload.onmatch) {\n\t\t\t\t\tPromise.resolve(payload.onmatch(params, path)).then(function(resolved) {\n\t\t\t\t\t\tupdate(payload, resolved)\n\t\t\t\t\t}, bail)\n\t\t\t\t}\n\t\t\t\telse update(payload, \"div\")\n\t\t\t}\n\t\t}, bail)\n\t\tredrawService0.subscribe(root, run1)\n\t}\n\troute.set = function(path, data, options) {\n\t\tif (lastUpdate != null) options = {replace: true}\n\t\tlastUpdate = null\n\t\trouteService.setPath(path, data, options)\n\t}\n\troute.get = function() {return currentPath}\n\troute.prefix = function(prefix0) {routeService.prefix = prefix0}\n\troute.link = function(vnode1) {\n\t\tvnode1.dom.setAttribute(\"href\", routeService.prefix + vnode1.attrs.href)\n\t\tvnode1.dom.onclick = function(e) {\n\t\t\tif (e.ctrlKey || e.metaKey || e.shiftKey || e.which === 2) return\n\t\t\te.preventDefault()\n\t\t\te.redraw = false\n\t\t\tvar href = this.getAttribute(\"href\")\n\t\t\tif (href.indexOf(routeService.prefix) === 0) href = href.slice(routeService.prefix.length)\n\t\t\troute.set(href, undefined, undefined)\n\t\t}\n\t}\n\troute.param = function(key3) {\n\t\tif(typeof attrs3 !== \"undefined\" && typeof key3 !== \"undefined\") return attrs3[key3]\n\t\treturn attrs3\n\t}\n\treturn route\n}\nm.route = _20(window, redrawService)\nm.withAttr = function(attrName, callback1, context) {\n\treturn function(e) {\n\t\tcallback1.call(context || this, attrName in e.currentTarget ? e.currentTarget[attrName] : e.currentTarget.getAttribute(attrName))\n\t}\n}\nvar _28 = coreRenderer(window)\nm.render = _28.render\nm.redraw = redrawService.redraw\nm.request = requestService.request\nm.jsonp = requestService.jsonp\nm.parseQueryString = parseQueryString\nm.buildQueryString = buildQueryString\nm.version = \"1.1.1\"\nm.vnode = Vnode\nif (true) module[\"exports\"] = m\nelse window.m = m\n}());\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../timers-browserify/main.js */ 9).setImmediate, __webpack_require__(/*! ./../webpack/buildin/global.js */ 0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 6 */
/* unknown exports provided */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(/*! ../bootstrap/css/bootstrap-theme.min.css */ 4);\n\n__webpack_require__(/*! ../app.css */ 3);\n\n__webpack_require__(/*! ../Ladda/dist/ladda-themeless.min.css */ 2);\n\nvar _mithril = __webpack_require__(/*! mithril */ 5);\n\nvar _mithril2 = _interopRequireDefault(_mithril);\n\nvar _app_ddi = __webpack_require__(/*! ./app_ddi.js */ 1);\n\nvar _app_ddi2 = _interopRequireDefault(_app_ddi);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction leftpanel() {\n    return (0, _mithril2.default)(\".sidepanel.container.clearfix[id='leftpanel']\", [(0, _mithril2.default)(\".panelbar[id='toggleLpanelicon']\", (0, _mithril2.default)(\"span\", [_mithril2.default.trust(\"&#9679;\"), (0, _mithril2.default)(\"br\"), _mithril2.default.trust(\"&#9679;\"), (0, _mithril2.default)(\"br\"), _mithril2.default.trust(\"&#9679;\"), (0, _mithril2.default)(\"br\"), _mithril2.default.trust(\"&#9679;\")])), (0, _mithril2.default)(\".panel-heading.text-center[id='leftpaneltitle']\", (0, _mithril2.default)(\"h3.panel-title\", \"Data Selection\")), (0, _mithril2.default)(\".btn-toolbar[role='toolbar']\", {\n        style: {\n            \"margin-left\": \".5em\",\n            \"margin-top\": \".5em\"\n        }\n    }, [(0, _mithril2.default)(\".btn-group\", {\n        style: {\n            \"margin-left\": \"0\"\n        }\n    }, [(0, _mithril2.default)(\"button.btn.active[id='btnVariables'][onclick='tabLeft(\\'tab1\\');'][title='Click variable name to add or remove the variable pebble from the modeling space.'][type='button']\", \"Variables\"), (0, _mithril2.default)(\"button.btn.btn-default[id='btnSubset'][onclick='tabLeft(\\'tab2\\');'][type='button']\", \"Subset\")]), (0, _mithril2.default)(\"button.btn.btn-default.ladda-button[data-spinner-color='#000000'][data-style='zoom-in'][id='btnSelect'][onclick='subsetSelect(\\'btnSelect\\');'][title='Subset data by the intersection of all selected values.'][type='button']\", {\n        style: {\n            \"display\": \"none\",\n            \"float\": \"right\",\n            \"margin-right\": \"10px\"\n        }\n    }, (0, _mithril2.default)(\"span.ladda-label\", {\n        style: {\n            \"pointer-events\": \"none\"\n        }\n    }, \"Select\"))]), (0, _mithril2.default)(\".row-fluid\", (0, _mithril2.default)(\"[id='leftpanelcontent']\", (0, _mithril2.default)(\"[id='leftContentArea']\", {\n        style: {\n            \"overflow\": \"scroll\",\n            \"height\": \"488px\"\n        }\n    }, [(0, _mithril2.default)(\"[id='tab1']\", {\n        style: {\n            \"display\": \"block\",\n            \"padding\": \"6px 12px\",\n            \"text-align\": \"center\"\n        }\n    }), (0, _mithril2.default)(\"[id='tab2']\", {\n        style: {\n            \"display\": \"none\",\n            \"margin-top\": \".5em\"\n        }\n    }), (0, _mithril2.default)(\"[id='tab3']\", (0, _mithril2.default)(\"p\", {\n        style: {\n            \"padding\": \".5em 1em\"\n        }\n    }, \"Select a variable from within the visualization in the center panel to view its summary statistics.\"))])))]);\n}\n\nfunction rightpanel() {\n    return (0, _mithril2.default)(\".sidepanel.container.clearfix[id='rightpanel']\", [(0, _mithril2.default)(\".panelbar[id='toggleRpanelicon']\", (0, _mithril2.default)(\"span\", [_mithril2.default.trust(\"&#9679;\"), (0, _mithril2.default)(\"br\"), _mithril2.default.trust(\"&#9679;\"), (0, _mithril2.default)(\"br\"), _mithril2.default.trust(\"&#9679;\"), (0, _mithril2.default)(\"br\"), _mithril2.default.trust(\"&#9679;\")])), (0, _mithril2.default)(\".panel-heading.text-center[id='rightpaneltitle']\", (0, _mithril2.default)(\"h3.panel-title\", \"Model Selection\")), (0, _mithril2.default)(\".btn-group.btn-group-justified[aria-label='...'][role='group']\", {\n        style: {\n            \"margin-top\": \".5em\"\n        }\n    }, [(0, _mithril2.default)(\"button.btn.active[id='btnModels'][onclick='tabRight(\\'btnModels\\');'][type='button']\", {\n        style: {\n            \"width\": \"33%\"\n        }\n    }, \"Models\"), (0, _mithril2.default)(\"button.btn.btn-default[id='btnSetx'][onclick='tabRight(\\'btnSetx\\');'][type='button']\", {\n        style: {\n            \"width\": \"34%\"\n        }\n    }, \"Set Covar.\"), (0, _mithril2.default)(\"button.btn.btn-default[id='btnResults'][onclick='tabRight(\\'btnResults\\');'][type='button']\", {\n        style: {\n            \"width\": \"33%\"\n        }\n    }, \"Results\")]), (0, _mithril2.default)(\".row-fluid\", (0, _mithril2.default)(\"[id='rightpanelcontent']\", (0, _mithril2.default)(\"[id='rightContentArea']\", {\n        style: {\n            \"overflow\": \"scroll\",\n            \"height\": \"488px\"\n        }\n    }, [(0, _mithril2.default)(\"[id='results']\", {\n        style: {\n            \"margin-top\": \".5em\"\n        }\n    }, [(0, _mithril2.default)(\".container[id='resultsView']\", {\n        style: {\n            \"width\": \"80%\",\n            \"background-color\": \"white\",\n            \"display\": \"none\",\n            \"float\": \"right\",\n            \"overflow\": \"auto\",\n            \"white-space\": \"nowrap\"\n        }\n    }), (0, _mithril2.default)(\"[id='modelView']\", {\n        style: {\n            \"width\": \"20%\",\n            \"background-color\": \"white\",\n            \"display\": \"none\",\n            \"float\": \"left\"\n        }\n    }), (0, _mithril2.default)(\"p[id='resultsHolder']\", {\n        style: {\n            \"padding\": \".5em 1em\"\n        }\n    })]), (0, _mithril2.default)(\"[id='setx']\", {\n        style: {\n            \"display\": \"none\"\n        }\n    }), (0, _mithril2.default)(\"[id='models']\", {\n        style: {\n            \"display\": \"block\",\n            \"padding\": \"6px 12px\",\n            \"text-align\": \"center\"\n        }\n    })])))]);\n}\n\nvar fileid = \"\";\nvar hostname = \"\";\nvar apikey = \"\";\nvar ddiurl = \"\";\nvar dataurl = \"\";\n\nvar Body = function () {\n    function Body() {\n        _classCallCheck(this, Body);\n    }\n\n    _createClass(Body, [{\n        key: 'oncreate',\n        value: function oncreate() {\n            $('#leftpanel span').click(function () {\n                if (!$('#leftpanel').hasClass('forceclosepanel')) {\n                    $('#leftpanel').removeClass('expandpanel');\n                    $('#leftpanel > div.row-fluid').toggleClass('closepanel');\n                    $('#leftpanel').toggleClass('closepanel');\n                    $('#main').toggleClass('svg-leftpanel');\n                    $('#btnSelect').css('display', 'none');\n                }\n            });\n            $('#rightpanel span').click(function () {\n                if (!$('#leftpanel').hasClass('forceclosepanel')) {\n                    $('#rightpanel').removeClass('expandpanel');\n                    $('#rightpanel > div.row-fluid').toggleClass('closepanel');\n                    $('#rightpanel').toggleClass('closepanel');\n                    $('#main').toggleClass('svg-rightpanel');\n                }\n            });\n\n            var myurl = window.location.toString();\n            var cindex = 0;\n            if (myurl.indexOf(\"dfId=\") > 0) {\n                fileid = myurl.substring(myurl.indexOf(\"dfId=\") + 5);\n                cindex = fileid.indexOf(\"&\");\n                if (cindex > 0) {\n                    fileid = fileid.substring(0, cindex);\n                };\n            };\n            if (myurl.indexOf(\"host=\") > 0) {\n                hostname = myurl.substring(myurl.indexOf(\"host=\") + 5);\n                cindex = hostname.indexOf(\"&\");\n                if (cindex > 0) {\n                    hostname = hostname.substring(0, cindex);\n                };\n            };\n            if (myurl.indexOf(\"key=\") > 0) {\n                apikey = myurl.substring(myurl.indexOf(\"key=\") + 4);\n                cindex = apikey.indexOf(\"&\");\n                if (cindex > 0) {\n                    apikey = apikey.substring(0, cindex);\n                };\n            };\n            if (myurl.indexOf(\"ddiurl=\") > 0) {\n                ddiurl = myurl.substring(myurl.indexOf(\"ddiurl=\") + 7);\n                ddiurl = ddiurl.replace(/%25/g, \"%\");\n                ddiurl = ddiurl.replace(/%3A/g, \":\");\n                ddiurl = ddiurl.replace(/%2F/g, \"/\");\n                cindex = ddiurl.indexOf(\"&\");\n                if (cindex > 0) {\n                    ddiurl = ddiurl.substring(0, cindex);\n                };\n            };\n            if (myurl.indexOf(\"dataurl=\") > 0) {\n                dataurl = myurl.substring(myurl.indexOf(\"dataurl=\") + 8);\n                dataurl = dataurl.replace(/%25/g, \"%\");\n                dataurl = dataurl.replace(/%3A/g, \":\");\n                dataurl = dataurl.replace(/%2F/g, \"/\");\n                cindex = dataurl.indexOf(\"&\");\n                if (cindex > 0) {\n                    dataurl = dataurl.substring(0, cindex);\n                };\n            };\n\n            console.log(\"fileid: \" + fileid);\n            console.log(\"hostname: \" + hostname);\n            console.log(\"apikey: \" + apikey);\n            console.log(\"ddiurl: \" + ddiurl);\n            console.log(\"dataurl: \" + dataurl);\n\n            (0, _app_ddi2.default)(fileid, hostname, ddiurl, dataurl);\n        }\n    }, {\n        key: 'view',\n        value: function view() {\n            return (0, _mithril2.default)('main', (0, _mithril2.default)(\"nav.navbar.navbar-default[id='option'][role='navigation']\", (0, _mithril2.default)(\"div\", [(0, _mithril2.default)(\".navbar-header[id='navbarheader']\", [(0, _mithril2.default)(\"img[alt='TwoRavens'][onmouseout='closeabout();'][onmouseover='about();'][src='images/TwoRavens.png'][width='100']\", {\n                style: {\n                    \"margin-left\": \"2em\",\n                    \"margin-top\": \"-0.5em\"\n                }\n            }), (0, _mithril2.default)(\".panel.panel-default[id='about']\", {\n                style: {\n                    \"position\": \"absolute\",\n                    \"left\": \"140px\",\n                    \"width\": \"380px\",\n                    \"display\": \"none\",\n                    \"z-index\": \"50\"\n                }\n            }, (0, _mithril2.default)(\".panel-body\"))]), (0, _mithril2.default)(\".field[id='dataField']\", {\n                style: {\n                    \"text-align\": \"center\",\n                    \"margin-top\": \"0.5em\"\n                }\n            }, [(0, _mithril2.default)(\"h4[id='dataName'][onclick='citetoggle=clickcite(citetoggle);'][onmouseout='closecite(citetoggle);'][onmouseover='opencite();']\", {\n                style: {\n                    \"display\": \"inline\"\n                }\n            }, \"Dataset Name\"), (0, _mithril2.default)(\".panel.panel-default[id='cite']\", {\n                style: {\n                    \"position\": \"absolute\",\n                    \"right\": \"50%\",\n                    \"width\": \"380px\",\n                    \"display\": \"none\",\n                    \"z-index\": \"50\",\n                    \"text-align\": \"left\"\n                }\n            }, (0, _mithril2.default)(\".panel-body\")), (0, _mithril2.default)(\"button.btn.btn-default.ladda-button.navbar-right[data-spinner-color='#000000'][data-style='zoom-in'][id='btnEstimate'][onclick='estimate(\\'btnEstimate\\')']\", {\n                style: {\n                    \"margin-left\": \"2em\",\n                    \"margin-right\": \"1em\"\n                }\n            }, (0, _mithril2.default)(\"span.ladda-label\", \"Estimate\")), (0, _mithril2.default)(\"button.btn.btn-default.navbar-right[id='btnReset'][onclick='reset()'][title='Reset']\", {\n                style: {\n                    \"margin-left\": \"2.0em\"\n                }\n            }, (0, _mithril2.default)(\"span.glyphicon.glyphicon-repeat\", {\n                style: {\n                    \"font-size\": \"1em\",\n                    \"color\": \"#818181\",\n                    \"pointer-events\": \"none\"\n                }\n            })), (0, _mithril2.default)(\".transformTool[id='transformations'][title='Construct transformations of existing variables using valid R syntax. For example, assuming a variable named d, you could enter \\'log(d)\\' or \\'d^2\\'.']\")])])), (0, _mithril2.default)(\".left.svg-leftpanel.svg-rightpanel.carousel.slide[id='main']\", [(0, _mithril2.default)(\".carousel-inner\"), (0, _mithril2.default)(\".spaceTool[id='spacetools']\", {\n                style: {\n                    \"z-index\": \"16\"\n                }\n            }, [(0, _mithril2.default)(\"button.btn.btn-default[id='btnForce'][onclick='forceSwitch()'][title='Pin the variable pebbles to the page.']\", (0, _mithril2.default)(\"span.glyphicon.glyphicon-pushpin\")), (0, _mithril2.default)(\"button.btn.btn-default[id='btnEraser'][onclick='erase()'][title='Wipe all variables from the modeling space.']\", (0, _mithril2.default)(\"span.glyphicon.glyphicon-magnet\"))]), (0, _mithril2.default)(\".legendary.panel.panel-default[id='legend']\", {\n                style: {\n                    \"display\": \"none\"\n                }\n            }, [(0, _mithril2.default)(\".panel-heading\", (0, _mithril2.default)(\"h3.panel-title\", [\"Legend  \", (0, _mithril2.default)(\"span.glyphicon.glyphicon-large.glyphicon-chevron-down.pull-right[data-target='#collapseLegend'][data-toggle='collapse'][href='#collapseLegend'][onclick='$(this).toggleClass(\\'glyphicon-chevron-up\\').toggleClass(\\'glyphicon-chevron-down\\');']\", {\n                style: _defineProperty({\n                    \"cursor\": \"pointer\"\n                }, 'cursor', \"hand\")\n            })])), (0, _mithril2.default)(\".panel-collapse.collapse.in[id='collapseLegend']\", (0, _mithril2.default)(\".panel-body\", [(0, _mithril2.default)(\".clearfix.hide[id='timeButton']\", [(0, _mithril2.default)(\".rectColor\", (0, _mithril2.default)(\"svg\", {\n                style: {\n                    \"width\": \"20px\",\n                    \"height\": \"20px\"\n                }\n            }, (0, _mithril2.default)(\"circle[cx='10'][cy='10'][fill='white'][r='9'][stroke='black'][stroke-width='2']\"))), (0, _mithril2.default)(\".rectLabel\", \"Time\")]), (0, _mithril2.default)(\".clearfix.hide[id='csButton']\", [(0, _mithril2.default)(\".rectColor\", (0, _mithril2.default)(\"svg\", {\n                style: {\n                    \"width\": \"20px\",\n                    \"height\": \"20px\"\n                }\n            }, (0, _mithril2.default)(\"circle[cx='10'][cy='10'][fill='white'][r='9'][stroke='black'][stroke-width='2']\"))), (0, _mithril2.default)(\".rectLabel\", \"Cross Sec\")]), (0, _mithril2.default)(\".clearfix.hide[id='dvButton']\", [(0, _mithril2.default)(\".rectColor\", (0, _mithril2.default)(\"svg\", {\n                style: {\n                    \"width\": \"20px\",\n                    \"height\": \"20px\"\n                }\n            }, (0, _mithril2.default)(\"circle[cx='10'][cy='10'][fill='white'][r='9'][stroke='black'][stroke-width='2']\"))), (0, _mithril2.default)(\".rectLabel\", \"Dep Var\")]), (0, _mithril2.default)(\".clearfix.hide[id='nomButton']\", [(0, _mithril2.default)(\".rectColor\", (0, _mithril2.default)(\"svg\", {\n                style: {\n                    \"width\": \"20px\",\n                    \"height\": \"20px\"\n                }\n            }, (0, _mithril2.default)(\"circle[cx='10'][cy='10'][fill='white'][r='9'][stroke='black'][stroke-width='2']\"))), (0, _mithril2.default)(\".rectLabel\", \"Nom Var\")])]))]), (0, _mithril2.default)(\".logbox.panel.panel-default[id='logdiv']\", {\n                style: {\n                    \"display\": \"none\"\n                }\n            }, [(0, _mithril2.default)(\".panel-heading\", (0, _mithril2.default)(\"h3.panel-title\", [\"History \", (0, _mithril2.default)(\"span.glyphicon.glyphicon-large.glyphicon-chevron-down.pull-right[data-target='#collapseLog'][data-toggle='collapse'][href='#collapseLog'][id='logicon'][onclick='$(this).toggleClass(\\'glyphicon-chevron-down\\').toggleClass(\\'glyphicon-chevron-up\\');']\", {\n                style: _defineProperty({\n                    \"cursor\": \"pointer\"\n                }, 'cursor', \"hand\")\n            })])), (0, _mithril2.default)(\".panel-collapse.collapse.in[id='collapseLog']\", (0, _mithril2.default)(\".panel-body\"))]), (0, _mithril2.default)(\"[id='ticker']\", {\n                style: {\n                    \"position\": \"fixed\",\n                    \"height\": \"50px\",\n                    \"width\": \"100%\",\n                    \"background\": \"#F9F9F9\",\n                    \"bottom\": \"0\"\n                }\n            }, (0, _mithril2.default)(\"a[href='somelink'][id='logID'][target='_blank']\", \"Replication\")), leftpanel(), rightpanel()]));\n        }\n    }]);\n\n    return Body;\n}();\n\n_mithril2.default.mount(document.body, Body);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 7 */
/* unknown exports provided */
/* all exports used */
/*!******************************!*\
  !*** ./~/process/browser.js ***!
  \******************************/
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 8 */
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ./~/setimmediate/setImmediate.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ 0), __webpack_require__(/*! ./../process/browser.js */ 7)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 9 */
/* unknown exports provided */
/* all exports used */
/*!*************************************!*\
  !*** ./~/timers-browserify/main.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ 8);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcz9iMDg4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcHBseSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCB3aW5kb3csIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHtcbiAgaWYgKHRpbWVvdXQpIHtcbiAgICB0aW1lb3V0LmNsb3NlKCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIFRpbWVvdXQoaWQsIGNsZWFyRm4pIHtcbiAgdGhpcy5faWQgPSBpZDtcbiAgdGhpcy5fY2xlYXJGbiA9IGNsZWFyRm47XG59XG5UaW1lb3V0LnByb3RvdHlwZS51bnJlZiA9IFRpbWVvdXQucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uKCkge307XG5UaW1lb3V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9jbGVhckZuLmNhbGwod2luZG93LCB0aGlzLl9pZCk7XG59O1xuXG4vLyBEb2VzIG5vdCBzdGFydCB0aGUgdGltZSwganVzdCBzZXRzIHVwIHRoZSBtZW1iZXJzIG5lZWRlZC5cbmV4cG9ydHMuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSwgbXNlY3MpIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IG1zZWNzO1xufTtcblxuZXhwb3J0cy51bmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IC0xO1xufTtcblxuZXhwb3J0cy5fdW5yZWZBY3RpdmUgPSBleHBvcnRzLmFjdGl2ZSA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuXG4gIHZhciBtc2VjcyA9IGl0ZW0uX2lkbGVUaW1lb3V0O1xuICBpZiAobXNlY3MgPj0gMCkge1xuICAgIGl0ZW0uX2lkbGVUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpIHtcbiAgICAgIGlmIChpdGVtLl9vblRpbWVvdXQpXG4gICAgICAgIGl0ZW0uX29uVGltZW91dCgpO1xuICAgIH0sIG1zZWNzKTtcbiAgfVxufTtcblxuLy8gc2V0aW1tZWRpYXRlIGF0dGFjaGVzIGl0c2VsZiB0byB0aGUgZ2xvYmFsIG9iamVjdFxucmVxdWlyZShcInNldGltbWVkaWF0ZVwiKTtcbmV4cG9ydHMuc2V0SW1tZWRpYXRlID0gc2V0SW1tZWRpYXRlO1xuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9IGNsZWFySW1tZWRpYXRlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3RpbWVycy1icm93c2VyaWZ5L21haW4uanNcbi8vIG1vZHVsZSBpZCA9IDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);